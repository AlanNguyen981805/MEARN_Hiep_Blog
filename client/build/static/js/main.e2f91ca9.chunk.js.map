{"version":3,"sources":["utils/FetchData.ts","pages/blogs/[slug].tsx","pages/category.tsx","redux/actions/commentAction.ts","components/comments/AvatarComment.tsx","components/comments/AvatarReply.tsx","components/editors/LiteQuill.tsx","components/comments/input.tsx","components/comments/CommentsList.tsx","components/comments/comments.tsx","components/blog/DisplayBlog.tsx","pages/blog/[slug].tsx","components/profile/OtherInfo.tsx","redux/actions/profileAction.ts","components/profile/UserBlog.tsx","components/profile/UserInfo.tsx","pages/profile/[slug].tsx","components/auth/LoginPass.tsx","components/auth/LoginWithSMS.tsx","components/global/SocialLogin.tsx","pages/login.tsx","components/cards/CreateForm.tsx","components/editors/ReactQuill.tsx","pages/create_blog.tsx","components/auth/RegisterForm.tsx","pages/register.tsx","pages sync /^/.//.*$","utils/checkTokenExp.ts","redux/actions/authAction.ts","redux/types/blogType.ts","components/global/Footer.tsx","components/global/Menu.tsx","components/global/Search.tsx","components/global/Header.tsx","PageRender.tsx","redux/types/socketType.ts","SocketClient.tsx","App.tsx","redux/reducers/authReducer.ts","redux/reducers/alertReducer.ts","redux/reducers/categoryReducer.ts","redux/reducers/homeBLogsReducer.ts","redux/reducers/blogsCategoryReducer.ts","redux/reducers/otherInfoReducer.ts","redux/reducers/userBlogsReducer.ts","redux/reducers/commentReducer.ts","redux/reducers/socketReducer.ts","redux/reducers/index.ts","redux/store.ts","index.tsx","components/global/NotFound.tsx","redux/types/alertType.ts","redux/types/authType.ts","redux/actions/blogAction.ts","redux/types/categoryType.ts","redux/types/commentType.ts","utils/ImgUpload.tsx","components/alert/Toast.tsx","components/alert/Alert.tsx","components/alert/Loading.tsx","utils/Valid.ts","components/cards/CardHoriz.tsx","components/global/Pagination.tsx","components/global/Loading.tsx","redux/actions/categoryAction.ts","components/cards/CardVert.tsx","redux/types/profileType.ts","pages/index.tsx","pages/active/[slug].tsx"],"names":["postApi","url","post","token","a","axios","headers","Authorization","res","getApi","get","patchAPI","patch","deleteAPI","delete","BlogByCategory","useSelector","state","categories","blogsCategory","dispatch","useDispatch","slug","useParams","useState","categoryId","setCategoryId","blogs","setBlogs","total","setTotal","useSearchParams","pageParam","useEffect","category","find","item","name","_id","every","id","getBlogsByCategoryId","data","className","map","blog","callback","num","Category","setName","edit","setEdit","auth","user","role","onSubmit","e","preventDefault","access_token","updateCategory","createCategory","htmlFor","onClick","type","value","onChange","target","xmlns","xmlnsXlink","aria-hidden","width","height","preserveAspectRatio","viewBox","d","fill","window","confirm","deleteCategory","fill-opacity","getComments","GET_COMMENT","payload","comments","ALERT","response","message","AvatarComment","src","avatar","alt","to","AvatarReply","user_reply","style","textDecoration","container","Quill","setBody","body","modules","toolbar","theme","Input","divRef","useRef","LiteQuill","ref","dangerouslySetInnerHTML","__html","display","div","current","innerText","trim","CommentsList","children","comment","showReply","setShowReply","onReply","setOnReply","content","cursor","Date","createdAt","toLocaleString","blog_id","blog_user_id","replyCM","reply_user","comment_root","toISOString","checkTokenExp","result","console","log","replyComments","Comments","next","setNext","opacity","pointerEvents","slice","index","length","color","DisplayBlog","loading","setLoading","location","useLocation","showComments","setShowComments","fetchComments","useCallback","search","title","createComment","Loading","Pagination","DetailBlog","setBlog","error","setError","socket","then","catch","err","msg","undefined","emit","showErrMsg","OtherInfo","other","setOther","otherInfo","GET_OTHER_INFO","success","getOtherInfo","newUser","account","UserBlog","params","blogsUser","searchParams","getBlogsByUserId","CardHoriz","UserInfo","password","cf_password","setUser","typePass","setTypePass","typeCfPass","handleChangeInput","check","checkImg","errors","imageUpload","photo","AUTH","updateUser","checkPassword","resetPassword","URL","createObjectURL","accept","files","file","defaultValue","disabled","NotFound","Profile","LoginPass","userLogin","setUserLogin","login","LoginWithSMS","phone","setPhone","SocialLogin","client_id","cookiepolicy","onSuccess","googleUser","idToken","getAuthResponse","id_token","loginGoogle","isSignedIn","appId","authResponse","accessToken","userID","loginFacebook","Login","sms","setSms","navigate","useNavigate","replace","CreateForm","bottom","right","thumbnail","rows","resize","description","quillRef","handleChangeImage","input","document","createElement","click","onchange","quill","range","getEditor","getSelection","insertEmbed","getModule","addHandler","CreateBlog","initialState","dispath","text","setText","handleSubmit","validCreateBlog","errLength","errMsg","newData","createBlog","ReactQuill","RegisterForm","userRegister","setUserRegister","setTypeCfPass","register","Register","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","resolve","module","exports","jwt_decode","exp","now","localStorage","setItem","logout","removeItem","href","validRegister","errLengh","errMSG","refesh_token","logged","getItem","GET_HOME_BLOGS","GET_BLOGS_CATEGORY_ID","GET_BLOGS_USER_ID","Footer","rel","Menu","pathname","navLinks","label","path","isActive","pn","link","data-bs-toggle","aria-expanded","aria-labelledby","Search","setSearch","delayDebounce","setTimeout","clearTimeout","placeholder","background","zIndex","maxHeight","overflow","Header","data-bs-target","aria-controls","aria-label","PageRender","page","React","require","default","generatePage","SOCKET","SocketClient","on","CREATE_COMMENT","off","REPLY_COMMENT","App","getCategory","getHomeBlogs","io","close","Alert","caseSensitive","element","authReducer","action","alertReducer","categoryReducer","types","filter","homeBlogsReducer","blogsCategoryReducer","otherInfoReducer","userBlogsReducer","commentReducer","socketReducer","combineReducers","alert","homeBlogs","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducers","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById","minHeight","top","left","transform","newBlog","param","CREATE_CATEGORY","GET_CATEGORIES","UPDATE_CATEGORY","DELETE_CATEGORY","size","includes","formData","FormData","append","fetch","method","json","public_id","secure_url","Toast","bgColor","minWidth","data-bs-dismiss","showSuccessMsg","stroke","strokeWidth","points","x","y","push","test","String","toLowerCase","objectFit","setPage","newArr","Array","_","i","handlePagination","newCategory","CardVert","Home","homeBlog","count","Active","setSuccess","active_token"],"mappings":"qRAEaA,EAAO,uCAAG,WAAOC,EAAaC,EAAcC,GAAlC,eAAAC,EAAA,sEACDC,IAAMH,KAAN,eAAmBD,GAAOC,EAAM,CAC9CI,QAAS,CAAEC,cAAeJ,KAFX,cACbK,EADa,yBAKZA,GALY,2CAAH,0DAQPC,EAAM,uCAAG,WAAOR,EAAaE,GAApB,eAAAC,EAAA,sEACAC,IAAMK,IAAN,eAAkBT,GAAO,CACvCK,QAAS,CAAEC,cAAeJ,KAFZ,cACZK,EADY,yBAIXA,GAJW,2CAAH,wDAONG,EAAQ,uCAAG,WAAOV,EAAaC,EAAcC,GAAlC,eAAAC,EAAA,sEACFC,IAAMO,MAAN,eAAoBX,GAAOC,EAAM,CAC/CI,QAAS,CAAEC,cAAeJ,KAFV,cACdK,EADc,yBAIbA,GAJa,2CAAH,0DAORK,EAAS,uCAAG,WAAOZ,EAAaE,GAApB,eAAAC,EAAA,sEACHC,IAAMS,OAAN,eAAqBb,GAAO,CAC1CK,QAAS,CAAEC,cAAeJ,KAFT,cACfK,EADe,yBAIdA,GAJc,2CAAH,yD,sHCuCPO,UAtDQ,WAAO,IAAD,EACaC,aAAY,SAACC,GAAD,OAAsBA,KAAhEC,EADiB,EACjBA,WAAYC,EADK,EACLA,cACdC,EAAWC,cACTC,EAAkBC,cAAlBD,KAHiB,EAKWE,mBAAS,IALpB,mBAKlBC,EALkB,KAKNC,EALM,OAMCF,qBAND,mBAMlBG,EANkB,KAMXC,EANW,OAOCJ,mBAAS,GAPV,mBAOlBK,EAPkB,KAOXC,EAPW,OAQFC,cACnBC,EATqB,oBASItB,IAAI,QAEjCuB,qBAAU,WACN,IAAMC,EAAWhB,EAAWiB,MAAK,SAAAC,GAAI,OAAIA,EAAKC,OAASf,KACpDY,GAAUR,EAAcQ,EAASI,OACrC,CAAChB,EAAMJ,IAEVe,qBAAU,WACN,GAAIR,EAEJ,GAAGN,EAAcoB,OAAM,SAAAH,GAAI,OAAIA,EAAKI,KAAOf,KACvCL,EAASqB,YAAqBhB,EAAYO,QACvC,CACH,IAAMU,EAAOvB,EAAcgB,MAAK,SAAAC,GAAI,OAAIA,EAAKI,KAAOf,KACpD,IAAIiB,EAAM,OAEVd,EAASc,EAAKf,OACdG,EAASY,EAAKb,UAEnB,CAACJ,EAAYN,EAAeC,IAO/B,OAAIO,EAEA,sBAAKgB,UAAU,iBAAf,UACI,qBAAKA,UAAU,aAAf,SACKhB,EAAMiB,KAAI,SAAAC,GAAI,OACX,cAAC,IAAD,CAAyBA,KAAMA,GAAhBA,EAAKP,UAI3BT,EAAQ,GACL,cAAC,IAAD,CACIA,MAAOA,EACPiB,SAjBS,SAACC,GACtB3B,EAASqB,YAAqBhB,EAAYsB,UAI5B,cAAC,IAAD,M,+FCiCPC,UAtEE,WAAO,IAAD,IACGxB,mBAAS,IADZ,mBACda,EADc,KACRY,EADQ,OAEGzB,mBAA2B,MAF9B,mBAEd0B,EAFc,KAERC,EAFQ,OAGMnC,aAAY,SAACC,GAAD,OAAsBA,KAAtDmC,EAHc,EAGdA,KAAMlC,EAHQ,EAGRA,WACPE,EAAWC,cA2BjB,OAJAY,qBAAU,WACHiB,GAAMD,EAAQC,EAAKb,QACvB,CAACa,IAEmB,WAApB,UAAAE,EAAKC,YAAL,eAAWC,MAAyB,cAAC,IAAD,IAErC,sBAAKX,UAAU,WAAf,UACE,uBAAMY,SA5BW,SAACC,GAEpB,GADEA,EAAEC,iBACAL,EAAKM,cAAiBrB,EAC1B,GAAGa,EAAM,CACL,GAAGA,EAAKb,OAASA,EAAM,OACvB,IAAMK,EAAI,2BAAOQ,GAAP,IAAab,SACvBjB,EAASuC,YAAejB,EAAMU,EAAKM,oBAEnCtC,EAASwC,YAAevB,EAAMe,EAAKM,eACnCT,EAAQ,IACRE,EAAQ,OAkBV,UACE,uBAAOU,QAAQ,WAAf,sBAEA,sBAAKlB,UAAU,SAAf,UAEQO,GAAQ,sBAAMY,QAAS,kBAAMX,EAAQ,OAA7B,eAEd,uBAAOY,KAAK,OAAO1B,KAAK,WAAWG,GAAG,WACtCwB,MAAO3B,EAAM4B,SAAU,SAAAT,GAAC,OAAIP,EAAQO,EAAEU,OAAOF,UAE7C,wBAAQD,KAAK,SAAb,SAAuBb,EAAO,SAAW,iBAI7C,8BAEIhC,EAAW0B,KAAI,SAAAV,GAAQ,OACrB,sBAAKS,UAAU,eAAf,UACE,mBAAGA,UAAU,sBAAb,SAAoCT,EAASG,OAE7C,gCACE,sBAAMyB,QAAS,kBAAMX,EAAQjB,IAA7B,SACI,qBAAKiC,MAAM,6BAA6BC,WAAW,+BAA+BC,cAAY,OAAOf,KAAK,MAAMgB,MAAM,MAAMC,OAAO,MAAMC,oBAAoB,gBAAgBC,QAAQ,gBAArL,SAAqM,sBAAMC,EAAE,yVAAyVC,KAAK,qBAE/iB,sBAAMb,QAAS,kBAtCPtB,EAsC0BN,EAASI,SArCjDc,EAAKM,cACNkB,OAAOC,QAAQ,+BAChBzD,EAAS0D,YAAetC,EAAIY,EAAKM,gBAHlB,IAAClB,GAsCR,SACI,sBAAK2B,MAAM,6BAA6BC,WAAW,+BAA+BC,cAAY,OAAOf,KAAK,MAAMgB,MAAM,MAAMC,OAAO,MAAMC,oBAAoB,gBAAgBC,QAAQ,gBAArL,UAAqM,sBAAMC,EAAE,kCAAkCK,eAAa,MAAMJ,KAAK,iBAAgB,sBAAMD,EAAE,8SAA8SC,KAAK,2BARvjBzC,EAASI,e,qJClC3C0C,EAAc,SAACxC,EAAYO,GAAb,8CAA6B,WAAO3B,GAAP,eAAAhB,EAAA,sEAEpC,EAFoC,SAG9BK,YAAO,iBAAD,OAAkB+B,EAAlB,iBAA6BO,EAA7B,kBADZ,IAFoC,OAG1CvC,EAH0C,OAIhDY,EAAS,CACL2C,KAAMkB,IACNC,QAAS,CACLxC,KAAMlC,EAAIkC,KAAKyC,SACftD,MAAOrB,EAAIkC,KAAKb,SARwB,gDAYhDT,EAAS,CAAE2C,KAAMqB,IAAOF,QAAS,KAAMG,SAASC,UAZA,yDAA7B,uD,eCNZC,EAXyB,SAAC,GAAY,IAAXlC,EAAU,EAAVA,KACtC,OACQ,sBAAKV,UAAU,iBAAf,UACI,qBAAK6C,IAAKnC,EAAKoC,OAAQC,IAAI,KAC3B,uBAAO/C,UAAU,qBAAjB,SACI,cAAC,IAAD,CAAMgD,GAAE,kBAAatC,EAAKf,KAA1B,SAAkCe,EAAKhB,aCoB5CuD,EAvBuB,SAAC,GAAwB,IAAvBvC,EAAsB,EAAtBA,KAAMwC,EAAgB,EAAhBA,WAC1C,OACI,sBAAKlD,UAAU,eAAf,UACF,qBAAK6C,IAAKnC,EAAKoC,OAAQC,IAAI,WAE3B,sBAAK/C,UAAU,OAAf,UACE,gCACE,cAAC,IAAD,CAAMgD,GAAE,mBAActC,EAAKf,KAC3BwD,MAAO,CAAEC,eAAgB,QADzB,SAEI1C,EAAKhB,SAIX,wBAAOM,UAAU,aAAjB,sBACW,cAAC,IAAD,CAAMgD,GAAE,0BAAcE,QAAd,IAAcA,OAAd,EAAcA,EAAYvD,KAAlC,gBACLuD,QADK,IACLA,OADK,EACLA,EAAYxD,iB,iBCEtB2D,G,OAAY,CACZ,CAAC,CAAE,KAAQ,KACX,CAAC,CAAE,OAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG,KAChC,CAAC,CAAE,KAAQ,CAAC,SAAS,EAAO,QAAS,UAErC,CAAC,OAAQ,SAAU,YAAa,UAChC,CAAC,aAAc,cACf,CAAC,CAAE,MAAS,IAAM,CAAE,WAAc,KAClC,CAAC,CAAE,OAAU,OAAQ,CAAE,OAAU,YAKtBC,EA/BiB,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,KACjCC,EAAe,CAAEC,QAAS,CAAEL,cAKlC,OACI,8BACK,cAAC,IAAD,CACGI,QAASA,EACTE,MAAM,OACNrC,SATS,SAACT,GAClB0C,EAAQ1C,IASAQ,MAAOmC,OCcRI,EA3BiB,SAAC,GAAgB,IAAfzD,EAAc,EAAdA,SAAc,EACpBtB,mBAAS,IADW,mBACrC2E,EADqC,KAC/BD,EAD+B,KAEtCM,EAASC,iBAAuB,MAUtC,OACI,gCACI,cAACC,EAAD,CAAWP,KAAMA,EAAMD,QAASA,IAEhC,qBAAKS,IAAKH,EAAQI,wBAAyB,CACvCC,OAAQV,GACTL,MAAO,CAACgB,QAAS,UAEpB,qBAAKnE,UAAU,kCAAkCmB,QAhBpC,WACjB,IAAMiD,EAAMP,EAAOQ,SACT,OAAID,QAAJ,IAAIA,OAAJ,EAAIA,EAAKE,WACVC,QAETpE,EAASqD,IAWL,sBCqCGgB,EApDwB,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,SAAUC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAAmB,EACzD/F,oBAAS,GADgD,mBAChFgG,EADgF,KACvEC,EADuE,KAEjFrG,EAAWC,cACT+B,EAASpC,aAAY,SAACC,GAAD,OAAsBA,KAA3CmC,KAoBR,OAEI,sBAAKT,UAAU,QAAf,UACI,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,MAAMiE,wBAAyB,CAC1CC,OAAQQ,EAAQK,WAGpB,sBAAK/E,UAAU,qCAAf,UACI,uBAAOmD,MAAO,CAAE6B,OAAQ,WAAa7D,QAAS,kBAAM2D,GAAYD,IAAhE,SACIA,EAAU,aAAe,cAG7B,gCACK,IAAII,KAAKP,EAAQQ,WAAWC,yBAKxCN,GAAW,cAAC,EAAD,CAAO1E,SArCP,SAACqD,GACjB,GAAI/C,EAAKC,MAASD,EAAKM,aAAvB,CACA,IAAMhB,EAAO,CACTW,KAAMD,EAAKC,KACX0E,QAASV,EAAQU,QACjBC,aAAcX,EAAQW,aACtBN,QAASvB,EACT8B,QAAS,GACTC,WAAYb,EAAQhE,KACpB8E,aAAcd,EAAQc,cAAgBd,EAAQ/E,IAC9CuF,WAAW,IAAID,MAAOQ,eAG1Bb,EAAa,GAAD,mBAAKD,GAAL,CAAgB5E,KAC5BtB,ELSqB,SAACsB,EAAgBvC,GAAjB,8CAAmC,WAAOiB,GAAP,iBAAAhB,EAAA,sEACvCiI,YAAclI,EAAOiB,GADkB,cACtDkH,EADsD,OAEtD5E,EAAe4E,GAAkBnI,EAFqB,kBAItCH,YAAQ,gBAAiB0C,EAAMgB,GAJO,gEAexD6E,QAAQC,IAAR,MAfwD,0DAAnC,sDKTZC,CAAc/F,EAAMU,EAAKM,eAClC+D,GAAW,OAyBHL,MCYDsB,EA3DoB,SAAC,GAAe,IAAdrB,EAAa,EAAbA,QAAa,EACZ7F,mBAAqB,IADT,mBACvC8F,EADuC,KAC5BC,EAD4B,OAEtB/F,mBAAS,GAFa,mBAEvCmH,EAFuC,KAEjCC,EAFiC,KAO9C,OAJA3G,qBAAU,WACFoF,EAAQY,SACZV,EAAaF,EAAQY,WACrB,CAACZ,EAAQY,UAET,sBAAKtF,UAAU,cAAcmD,MAAO,CAChC+C,QAASxB,EAAQ/E,IAAM,EAAI,GAC3BwG,cAAezB,EAAQ/E,IAAM,UAAY,QAF7C,UAIK+E,EAAQhE,MAAQ,cAAC,EAAD,CAAeA,KAAMgE,EAAQhE,OAC9C,eAAC,EAAD,CACIgE,QAASA,EACTC,UAAWA,EACXC,aAAcA,EAHlB,UAKKD,EAAUyB,MAAM,EAAGJ,GAAM/F,KAAI,SAACyE,EAAS2B,GAAV,OAC1B,sBAAiBrG,UAAU,cAAcmD,MAAO,CAC5C+C,QAASxB,EAAQ/E,IAAM,EAAI,GAC3BwG,cAAezB,EAAQ/E,IAAM,UAAY,QAF7C,UAKQ+E,EAAQhE,MACJ,cAAC,EAAD,CACIA,KAAMgE,EAAQhE,KACdwC,WAAYwB,EAAQa,aAKhC,cAAC,EAAD,CACIb,QAASA,EACTC,UAAWA,EACXC,aAAcA,MAhBZyB,MAqBd,qBAAKlD,MAAO,CAAE6B,OAAQ,WAAtB,SAEQL,EAAU2B,OAASN,EAAO,EACpB,uBAAO7C,MAAO,CAAEoD,MAAO,WACrBpF,QAAS,kBAAM8E,EAAQD,EAAO,IADhC,kCAIArB,EAAU2B,OAAS,GACrB,uBAAOnD,MAAO,CAAEoD,MAAO,QACnBpF,QAAS,kBAAM8E,EAAQ,IAD3B,uC,QCyDbO,EArGuB,SAAC,GAAY,IAAXtG,EAAU,EAAVA,KAAU,EACrB7B,aAAY,SAACC,GAAD,OAAsBA,KAArDmC,EADwC,EACxCA,KAAM+B,EADkC,EAClCA,SACR/D,EAAWC,cAF+B,EAGlBG,oBAAS,GAHS,mBAGzC4H,EAHyC,KAGhCC,EAHgC,KAI1CC,EAAWC,cAJ+B,EAMR/H,mBAAqB,IANb,mBAMzCgI,EANyC,KAM3BC,EAN2B,KAuB1CC,EAAgBC,sBAAW,uCAAC,WAAOnH,GAAP,2BAAApC,EAAA,6DAAmB2C,EAAnB,+BAAyB,EACzDsG,GAAW,GADqB,SAE1BjI,EAAS4D,EAAYxC,EAAIO,IAFC,OAGhCsG,GAAW,GAHqB,2CAAD,sDAI9B,CAACjI,IAmBJ,OAZAa,qBAAU,WACoB,IAAzBkD,EAASzC,KAAKuG,QACjBQ,EAAgBtE,EAASzC,QACxB,CAACyC,EAASzC,OAEbT,qBAAU,WACR,GAAIY,EAAKP,IAAT,CAEA,IAAMS,EAAMuG,EAASM,OAAOb,MAAM,IAAM,EACxCW,EAAc7G,EAAKP,IAAKS,MACvB,CAACF,EAAKP,MAGP,gCACE,oBAAIK,UAAU,wCACdmD,MAAO,CAAEoD,MAAO,WADhB,SAEGrG,EAAKgH,QAGR,sBAAKlH,UAAU,sBAAsBmD,MAAO,CAACoD,MAAO,QAApD,UACE,gCAE0B,kBAAfrG,EAAKQ,MAAZ,cACOR,EAAKQ,KAAKhB,QAIrB,uBAAOM,UAAU,OAAjB,SACI,IAAIiF,KAAK/E,EAAKgF,WAAWC,sBAI/B,qBAAKlB,wBAAyB,CAC5BC,OAAQhE,EAAK6E,WAGf,uBAEA,yCAGEtE,EAAKC,KAAO,cAAC,EAAD,CAAOP,SAnEH,SAACqD,GACrB,GAAI/C,EAAKC,MAASD,EAAKM,aAAvB,CAEA,IAAMhB,EAAO,CACXgF,QAASvB,EACT9C,KAAMD,EAAKC,KACX0E,QAAUlF,EAAKP,IACf0F,aAAenF,EAAKQ,KAAef,IACnC2F,QAAS,GACTJ,WAAW,IAAID,MAAOQ,eAExBqB,EAAgB,CAAC/G,GAAF,mBAAW8G,KAC1BpI,EP3ByB,SAACsB,EAAWvC,GAAZ,8CAA8B,WAAOiB,GAAP,iBAAAhB,EAAA,sEAClCiI,YAAclI,EAAOiB,GADa,cACjDkH,EADiD,OAEjD5E,EAAe4E,GAAkBnI,EAFgB,kBAKjCH,YAAQ,UAAW0C,EAAMgB,GALQ,gEAcnDtC,EAAS,CAAE2C,KAAMqB,IAAOF,QAAS,KAAMG,SAASC,UAdG,0DAA9B,sDO2BhBwE,CAAcpH,EAAMU,EAAKM,mBAwD5B,yCAAW,cAAC,IAAD,CAAMiC,GAAE,sBAAiB9C,EAAKP,KAA9B,mBAAX,kBAKF8G,EAAU,cAACW,EAAA,EAAD,IAAH,OACPP,QADO,IACPA,OADO,EACPA,EAAc5G,KAAI,SAACyE,EAAS2B,GAAV,OAChB,cAAC,EAAD,CAAsB3B,QAASA,GAAhB2B,MAIjB7D,EAAStD,MAAQ,GACf,cAACmI,EAAA,EAAD,CACEnI,MAAOsD,EAAStD,MAChBiB,SA7De,SAACC,GACpBF,EAAKP,KACToH,EAAc7G,EAAKP,IAAKS,U,QCWbkH,UA/CI,WAAO,IACTzH,EAAejB,cAArBD,KADc,EAGGE,qBAHH,mBAGdqB,EAHc,KAGRqH,EAHQ,OAIS1I,oBAAS,GAJlB,mBAId4H,EAJc,KAILC,EAJK,OAKK7H,mBAAS,IALd,mBAKd2I,EALc,KAKPC,EALO,KAMbC,EAAWrJ,aAAY,SAACC,GAAD,OAAsBA,KAA7CoJ,OA6BR,OA3BApI,qBAAU,WACN,GAAIO,EAaJ,OAZA6G,GAAW,GAEX5I,YAAO,QAAD,OAAS+B,IACd8H,MAAK,SAAA9J,GACF0J,EAAQ1J,EAAIkC,MACZ2G,GAAW,MAEdkB,OAAM,SAAAC,GACHJ,EAASI,EAAInF,SAAS3C,KAAK+H,KAC3BpB,GAAW,MAGR,kBAAMa,OAAQQ,MACtB,CAAClI,IAGJP,qBAAU,WACN,GAAIO,GAAO6H,EAGX,OAFAA,EAAOM,KAAK,WAAYnI,GAEjB,WACH6H,EAAOM,KAAK,UAAWnI,MAE5B,CAAC6H,EAAQ7H,IAET4G,EAAgB,cAAC,IAAD,IAEf,mCACI,sBAAKzG,UAAU,OAAf,UACKwH,GAASS,YAAWT,GAEpBtH,GAAQ,cAAC,EAAD,CAAaA,KAAMA,W,4KCY7BgI,EAlDqB,SAAC,GAAU,IAATrI,EAAQ,EAARA,GAAQ,EAClBhB,qBADkB,mBACrCsJ,EADqC,KAC9BC,EAD8B,KAGpCC,EAAchK,aAAY,SAACC,GAAD,OAAsBA,KAAhD+J,UACF5J,EAAWC,cAejB,OAdAkH,QAAQC,IAAIwC,GAEZ/I,qBAAU,WACR,GAAIO,EAEJ,GAAGwI,EAAUzI,OAAM,SAAAc,GAAI,OAAIA,EAAKf,MAAQE,KACtCpB,ECsFsB,SAACoB,GAAD,8CAAgB,WAAOpB,GAAP,eAAAhB,EAAA,sEAEpCgB,EAAS,CACL2C,KAAMqB,IACNF,QAAS,CACLkE,SAAS,KALmB,SAQlB3I,YAAO,QAAD,OAAS+B,IARG,OAQ9BhC,EAR8B,OASpCY,EAAS,CACL2C,KAAMkH,IACN/F,QAAS1E,EAAIkC,OAGjBtB,EAAS,CACL2C,KAAMqB,IACNF,QAAS,CACLkE,SAAS,EACT8B,QAAS,YAlBmB,yGAAhB,sDDtFbC,CAAa3I,QACnB,CACH,IAAM4I,EAAUJ,EAAU7I,MAAK,SAAAkB,GAAI,OAAIA,EAAKf,MAAQE,KACjD4I,GAASL,EAASK,MAEvB,CAAC5I,EAAIwI,EAAW5J,IAGd0J,EAEF,sBAAKnI,UAAU,mCAAf,UACE,qBAAKA,UAAU,cAAf,SACE,qBAAK6C,IAAKsF,EAAMrF,OAAQC,IAAI,aAG9B,oBAAI/C,UAAU,6BAAd,SACGmI,EAAMxH,OAGT,yCACQ,sBAAMX,UAAU,YAAhB,SACHmI,EAAMzI,UAIX,uDACA,sBAAMM,UAAU,YAAhB,SACGmI,EAAMO,UAGT,8CACa,sBAAMvF,MAAO,CAACoD,MAAO,WAArB,SACP,IAAItB,KAAKkD,EAAMjD,WAAWC,yBAxBlB,cAACiC,EAAA,EAAD,K,+BE+BLuB,EApDE,WACb,IAAMC,EAAchK,cACdH,EAAWC,cACTmK,EAAcxK,aAAY,SAACC,GAAD,OAAsBA,KAAhDuK,UAHW,EAIOhK,qBAJP,mBAIZG,EAJY,KAILC,EAJK,OAKOJ,mBAAS,GALhB,mBAKZK,EALY,KAKLC,EALK,OAMIC,cAAhB0J,EANY,oBAQnBxJ,qBAAU,WACN,GAAIsJ,EAAOjK,KAAX,CACA,IAAMsI,EAAM,gBAAY6B,EAAa/K,IAAI,SAEzC,GAAG8K,EAAUjJ,OAAM,SAACH,GAAD,OAAeA,EAAKI,KAAO+I,EAAOjK,QACjDF,EAASsK,YAAiBH,EAAOjK,KAAMsI,QACpC,CACH,IAAMlH,EAAO8I,EAAUrJ,MAAK,SAACC,GAAD,OAAeA,EAAKI,KAAO+I,EAAOjK,QAC9D,IAAIoB,EAAM,OACVd,EAASc,EAAKf,OACdG,EAASY,EAAKb,OAGlB0G,QAAQC,IAAI7G,MACb,CAAC4J,EAAOjK,KAAMF,EAAUO,EAAO4J,EAAQC,IAO1C,OAAI7J,EAEgB,IAAjBA,EAAMsH,OACL,0CAGA,gCACI,qCAEQtH,QAFR,IAEQA,OAFR,EAEQA,EAAOiB,KAAI,SAACC,GAAD,OACP,cAAC8I,EAAA,EAAD,CAA0B9I,KAAMA,GAAhBA,EAAKP,UAIjC,8BAEQT,EAAQ,GAAK,cAACmI,EAAA,EAAD,CAAYnI,MAAOA,EAAOiB,SArB9B,SAACC,GACtB,IAAM6G,EAAM,gBAAY7G,GACxB3B,EAASsK,YAAiBH,EAAOjK,KAAMsI,YAGzB,cAACG,EAAA,EAAD,K,gBC+EP6B,EAhHE,WAAO,IAAD,MAEZxI,EAAQpC,aAAY,SAACC,GAAD,OAAsBA,KAA1CmC,KACDhC,EAAWC,cAHE,EAIKG,mBAHH,CAACa,KAAM,GAAIgJ,QAAS,GAAI5F,OAAQ,GAAIoG,SAAU,GAAIC,YAAa,KADjE,mBAIZzI,EAJY,KAIN0I,EAJM,OAKavK,oBAAS,GALtB,mBAKZwK,EALY,KAKFC,EALE,OAMiBzK,oBAAS,GAN1B,mBAMZ0K,EANY,KAOZ7J,GAPY,KAOoCgB,EAAhDhB,MAAeoD,GAAiCpC,EAA1CgI,QAA0ChI,EAAjCoC,QAAQoG,EAAyBxI,EAAzBwI,SAAUC,EAAezI,EAAfyI,YAElCK,EAAoB,SAAC3I,GAAoB,IAAD,EACpBA,EAAEU,OAAjB7B,EADmC,EACnCA,KAAM2B,EAD6B,EAC7BA,MACb+H,EAAQ,2BAAI1I,GAAL,kBAAYhB,EAAO2B,MAwB9B,OAAIZ,EAAKC,KAEL,uBAAMV,UAAU,eAAeY,SAbd,SAACC,GAClBA,EAAEC,kBACCpB,GAAQoD,IACPrE,EFvBc,SAACqE,EAAcpD,EAAce,GAA7B,8CAC1B,WAAMhC,GAAN,yBAAAhB,EAAA,yDACQgD,EAAKM,cAAiBN,EAAKC,KADnC,wDAEQpD,EAAM,GAFd,kBAI6BoI,YAAcjF,EAAKM,aAActC,GAJ9D,UAIckH,EAJd,OAKc5E,EAAe4E,GAAkBlF,EAAKM,aAC5CtC,EAAS,CACL2C,KAAMqB,IACNF,QAAS,CACLkE,SAAS,MAId3D,EAbX,sBAckB2G,EAAQC,YAAS5G,IAdnC,0CAgBuBrE,EAAS,CACZ2C,KAAMqB,IACNF,QAAS,CAACoH,OAAQF,MAlBtC,yBAqBgCG,YAAY9G,GArB5C,eAqBkB+G,EArBlB,OAsBYvM,EAAMuM,EAAMvM,IAEZmB,EAAS,CACL2C,KAAM0I,IACNvH,QAAS,CACLxB,aAAcA,EACdL,KAAK,2BACED,EAAKC,MADR,IAEAoC,OAAQxF,GAAYmD,EAAKC,KAAKoC,OAC9BpD,KAAMA,GAAae,EAAKC,KAAKhB,UA/BrD,UAqC8B1B,YAAS,OAAQ,CAC/B8E,OAAQxF,GAAYmD,EAAKC,KAAKoC,OAC9BpD,KAAMA,GAAae,EAAKC,KAAKhB,MAC9BqB,GAxCf,QAqCkBlD,EArClB,OA0CYY,EAAS,CACL2C,KAAMqB,IACNF,QAAS,CAACgG,QAAS1K,EAAIkC,KAAK+H,OA5C5C,QAiDQrJ,EAAS,CACL2C,KAAMqB,IACNF,QAAS,CACLkE,SAAS,KApDzB,kDAwDQhI,EAAS,CACL2C,KAAMqB,IACNF,QAAS,CACLoH,OAAQ,KAAMjH,SAAS3C,KAAK+H,OA3D5C,0DAD0B,sDEuBLiC,CAAYjH,EAAiBpD,EAAMe,IAG7CyI,GAAYzI,EAAKM,cAChBtC,EFuCiB,SACzByK,EAAkBC,EAAqB3L,GADd,8CAExB,WAAMiB,GAAN,mBAAAhB,EAAA,2DACKqK,EAAMkC,YAAcd,EAAUC,IADnC,yCAEc1K,EAAS,CAAC2C,KAAMqB,IAAOF,QAAS,CAACoH,OAAQ7B,MAFvD,gCAIwBpC,YAAclI,EAAOiB,GAJ7C,cAISkH,EAJT,OAKS5E,EAAe4E,GAAkBnI,EACvCiB,EAAS,CACL2C,KAAMqB,IACNF,QAAS,CACLkE,SAAS,KATpB,UAYqBzI,YAAS,iBAAkB,CAACkL,YAAWnI,GAZ5D,eAcGtC,EAAS,CACL2C,KAAMqB,IACNF,QAAS,CACLkE,SAAS,EACT8B,QAAS,YAlBpB,kDAsBG9J,EAAS,CACL2C,KAAMqB,IACNF,QAAS,CACLoH,OAAQ,KAAMjH,SAAS3C,KAAK+H,OAzBvC,0DAFwB,sDEvCRmC,CAAcf,EAAUC,EAAa1I,EAAKM,gBAMvD,UACI,sBAAKf,UAAU,cAAf,UACI,qBAAK6C,IAAKC,EAASoH,IAAIC,gBAAgBrH,GAAvB,UAAiCrC,EAAKC,YAAtC,aAAiC,EAAWoC,OAAQC,IAAI,KACxE,iCACI,uCACA,uBACI3B,KAAK,OACLgJ,OAAO,UACP1K,KAAK,OACLG,GAAG,UACHyB,SAjCK,SAACT,GACtB,IACMwJ,EADSxJ,EAAEU,OACI8I,MAErB,GADAzE,QAAQC,IAAIwE,GACTA,EAAO,CACN,IAAMC,EAAOD,EAAM,GACnBjB,EAAQ,2BAAI1I,GAAL,IAAWoC,OAAQwH,eA+B1B,sBAAKtK,UAAU,aAAf,UACI,uBAAOkB,QAAQ,UAAf,kBACA,uBACIE,KAAK,OACLpB,UAAU,eACVH,GAAG,OACHH,KAAK,OACL6K,aAAY,UAAE9J,EAAKC,YAAP,aAAE,EAAWhB,KACzB4B,SAAUkI,OAGlB,sBAAKxJ,UAAU,aAAf,UACI,uBAAOkB,QAAQ,UAAf,qBACA,uBACIE,KAAK,OACLpB,UAAU,eACVH,GAAG,SACHH,KAAK,UACL6K,aAAY,UAAE9J,EAAKC,YAAP,aAAE,EAAWgI,QACzBpH,SAAUkI,EACVgB,UAAU,OAGlB,sBAAKxK,UAAU,aAAf,UACI,uBAAOkB,QAAQ,UAAf,sBACA,uBACIE,KAAMiI,EAAW,OAAQ,WACzBrJ,UAAU,eACVH,GAAG,WACHH,KAAK,WACL2B,MAAO6H,EACP5H,SAAUkI,EACVgB,SAA6B,aAAnB/J,EAAKC,KAAKU,OAExB,uBAAOD,QAAS,kBAAMmI,GAAaD,IAAnC,SAA+CA,EAAW,OAAS,cAGhD,aAAnB5I,EAAKC,KAAKU,MACV,wBAAOpB,UAAU,cAAjB,wCACgCS,EAAKC,KAAKU,KAD1C,8BAIJ,sBAAKpB,UAAU,aAAf,UACI,uBAAOkB,QAAQ,UAAf,8BACA,uBACIE,KAAMmI,EAAa,OAAQ,WAC3BvJ,UAAU,eACVH,GAAG,cACHH,KAAK,cACL2B,MAAO8H,EACP7H,SAAUkI,EACVgB,SAA6B,aAAnB/J,EAAKC,KAAKU,OAExB,uBAAOD,QAAS,kBAAMmI,GAAaD,IAAnC,SAA+CA,EAAW,OAAS,cAGvE,wBAAQrJ,UAAU,eAAeoB,KAAK,SAAtC,uBAxEc,cAACqJ,EAAA,EAAD,KCbXC,UApBC,WAAO,IAAD,EACX/L,EAAiBC,cAAjBD,KACC8B,EAASpC,aAAY,SAACC,GAAD,OAAsBA,KAA3CmC,KAIR,OAFImF,QAAQC,IAAI,CAACpF,SAGb,sBAAKT,UAAU,WAAf,UACI,qBAAKA,UAAU,gBAAf,UAEQ,UAAAS,EAAKC,YAAL,eAAWf,OAAQhB,EAAO,cAAC,EAAD,IAAe,cAAC,EAAD,CAAWkB,GAAIlB,MAGhE,qBAAKqB,UAAU,WAAf,SACI,cAAC,EAAD,W,6GC+BD2K,EAhDG,WACd,IADoB,EAEc9L,mBADb,CAAC6J,QAAS,GAAIQ,SAAU,KADzB,mBAEb0B,EAFa,KAEFC,EAFE,OAGYhM,oBAAS,GAHrB,mBAGbwK,EAHa,KAGHC,EAHG,KAIbZ,EAAqBkC,EAArBlC,QAASQ,EAAY0B,EAAZ1B,SACVzK,EAAWC,cAEX8K,EAAoB,SAAC3I,GAAqB,IAAD,EACrBA,EAAEU,OAAjBF,EADoC,EACpCA,MAAO3B,EAD6B,EAC7BA,KACdmL,EAAa,2BAAID,GAAL,kBAAiBlL,EAAO2B,MAQxC,OACI,uBAAMT,SANW,SAACC,GAClBA,EAAEC,iBACFrC,EAASqM,YAAMF,KAIf,UACI,sBAAK5K,UAAU,kBAAf,UACI,uBAAOkB,QAAQ,UAAf,gCACA,uBACIE,KAAK,OACLpB,UAAU,eACVN,KAAK,UACLG,GAAG,UACHwB,MAAOqH,EACPpH,SAAUkI,OAGlB,sBAAKxJ,UAAU,kBAAf,UACI,uBAAOkB,QAAQ,UAAUlB,UAAU,aAAnC,sBACA,uBACIoB,KAAMiI,EAAW,OAAS,WAC1BrJ,UAAU,eACVN,KAAK,WACLG,GAAG,WACHwB,MAAO6H,EACP5H,SAAUkI,IAEd,uBAAOrI,QAAS,kBAAMmI,GAAaD,IAAnC,SAA+CA,EAAW,OAAS,YAGvE,wBAAQjI,KAAK,SAASpB,UAAU,0BAA0BwK,UAAW9B,IAAWQ,EAAhF,uBCzBG6B,EArBM,WAAO,IAAD,EACGlM,mBAAS,IADZ,mBAChBmM,EADgB,KACTC,EADS,KAEvB,OACI,+BACI,sBAAKjL,UAAU,kBAAf,UACI,uBAAOA,UAAU,aAAjB,mBACA,uBACIoB,KAAK,OACLpB,UAAU,eACVH,GAAG,QACHwB,MAAO2J,EACP1J,SAAU,SAACT,GAAD,OAAOoK,EAASpK,EAAEU,OAAOF,UAEvC,wBAAQD,KAAK,SAASpB,UAAU,qBAAqBwK,UAAUQ,EAA/D,yB,kBCuBDE,EAhCK,WAChB,IAAMzM,EAAWC,cAajB,OACI,gCACK,cAAC,cAAD,CACGyM,UAAU,2EACVC,aAAa,qBACbC,UAhBM,SAACC,GACf,IAAMC,EAAUD,EAAWE,kBAAkBC,SAC7ChN,EAASiN,YAAYH,KAebI,YAAY,IAEhB,cAAC,gBAAD,CACIC,MAAM,kBACNP,UAhBQ,SAAC3I,GAAyC,IAAD,EACzBA,EAASmJ,aAAjCC,EADiD,EACjDA,YAAaC,EADoC,EACpCA,OACrBnG,QAAQC,IAAI,CAAEiG,cAAaC,WAC3BtN,EAASuN,YAAcF,EAAaC,KAc5BJ,YAAY,QCqBbM,UA5CD,WAAO,IAAD,EACMpN,oBAAS,GADf,mBACTqN,EADS,KACJC,EADI,KAEVC,EAAWC,cACT5L,EAASpC,aAAY,SAACC,GAAD,OAAsBA,KAA3CmC,KACFkG,EAAWC,cAWjB,OATAhB,QAAQC,IAAIpF,GACZnB,qBAAU,WACN,GAAGmB,EAAKM,aAAc,CAClB,IAAIzD,EAAMqJ,EAASM,OAAOqF,QAAQ,IAAK,KACvC,GAAGhP,EAAK,OAAO8O,EAAS9O,GACxB8O,EAAS,QAEd,CAAC3L,EAAKM,eAGL,qBAAKf,UAAU,YAAf,SACI,sBAAKA,UAAU,WAAf,UACI,oBAAIA,UAAU,kCAAd,mBAEA,cAAC,EAAD,IACCkM,EAAM,cAAC,EAAD,IAAmB,cAAC,EAAD,IAC1B,uBAAOlM,UAAU,wBAAwBmD,MAAO,CAAC6B,OAAQ,WAAzD,SACI,cAAC,IAAD,CAAMhC,GAAG,mBAAmBhD,UAAU,QAAtC,+BAKJ,sBAAMA,UAAU,QAAQmB,QAAS,kBAAMgL,GAAQD,IAA/C,SACMA,EAAM,wBAA0B,qBAItC,6DAEI,cAAC,IAAD,CAAMlJ,GAAE,YAAeG,MAAO,CAACoD,MAAO,WAAtC,oC,sHCiDLgG,EAnFsB,SAAC,GAAqB,IAApBrM,EAAmB,EAAnBA,KAAMqH,EAAa,EAAbA,QACjChJ,EAAeF,aAAY,SAACC,GAAD,OAAsBA,KAAjDC,WAEFiL,EAAoB,SAAC3I,GAAqB,IAAD,EACnBA,EAAEU,OAAlB7B,EADmC,EACnCA,KAAM2B,EAD6B,EAC7BA,MACdkG,EAAQ,2BAAIrH,GAAL,kBAAYR,EAAO2B,MAY9B,OACI,iCACI,sBAAKrB,UAAU,+BAAf,UACI,uBACIoB,KAAK,OACLpB,UAAU,eACVqB,MAAOnB,EAAKgH,MACZxH,KAAK,QACL4B,SAAUkI,IAGd,wBACIxJ,UAAU,+BACVmD,MAAO,CAAEqJ,OAAQ,EAAGC,MAAO,MAAOvG,QAAS,OAF/C,UAIKhG,EAAKgH,MAAMZ,OAJhB,YAQJ,qBAAKtG,UAAU,kBAAf,SACI,uBACIoB,KAAK,OACLpB,UAAU,eACVoK,OAAO,UACP9I,SAjCa,SAACT,GAC1B,IACMwJ,EADSxJ,EAAEU,OACI8I,MACrB,GAAGA,EAAO,CACN,IAAMC,EAAOD,EAAM,GACnB9C,EAAQ,2BAAIrH,GAAL,IAAWwM,UAAWpC,WAgC7B,sBAAKtK,UAAU,+BAAf,UACI,0BACIA,UAAU,eACV2M,KAAM,EACNxJ,MAAO,CAAEyJ,OAAQ,QACjBlN,KAAK,cACL2B,MAAOnB,EAAK2M,YACZvL,SAAUkI,IAGd,wBACIxJ,UAAU,+BACVmD,MAAO,CAAEqJ,OAAQ,EAAGC,MAAO,MAAOvG,QAAS,OAF/C,UAGKhG,EAAK2M,YAAYvG,OAHtB,aAOJ,qBAAKtG,UAAU,kBAAf,SACI,yBACIA,UAAU,+BACVN,KAAK,WACL2B,MAAOnB,EAAKX,SACZ+B,SAAUkI,EAJd,UAMI,wBAAQnI,MAAM,GAAd,+BAEI9C,EAAW0B,KAAI,SAAAV,GAAQ,OACnB,wBAA2B8B,MAAO9B,EAASI,IAA3C,SACKJ,EAASG,MADDH,EAASI,iB,yCCZ9C0D,EAAY,CACZ,CAAC,CAAE,KAAQ,KACX,CAAC,CAAE,OAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG,KAChC,CAAC,CAAE,KAAQ,CAAC,SAAS,EAAO,QAAS,UAErC,CAAC,OAAQ,SAAU,YAAa,UAChC,CAAC,aAAc,cACf,CAAC,CAAE,MAAS,IAAM,CAAE,WAAc,KAClC,CAAC,CAAE,OAAU,OAAQ,CAAE,OAAU,UAEjC,CAAC,CAAE,KAAQ,WAAY,CAAE,KAAQ,WACjC,CAAC,CAAE,OAAU,MAAO,CAAE,OAAU,OAChC,CAAC,CAAE,UAAa,QAChB,CAAC,CAAE,MAAS,KAEZ,CAAC,QAAS,OAAQ,QAAQ,UAKfC,EA9EiB,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACxBE,EAAe,CAAEC,QAAS,CAAEL,cAC5B5E,EAAWC,cACXoO,EAAWhJ,iBAAmB,MAM9BiJ,EAAoB/F,uBAAY,WAClC,IAAMgG,EAAQC,SAASC,cAAc,SACrCF,EAAM5L,KAAO,OACb4L,EAAM5C,OAAS,UACf4C,EAAMG,QAENH,EAAMI,SAAN,sBAAiB,wCAAA3P,EAAA,yDACP4M,EAAQ2C,EAAM3C,MADP,yCAEK5L,EAAS,CACvB2C,KAAMqB,IACNF,QAAS,CAACoH,OAAQ,yBAJT,UAMPW,EAAOD,EAAM,KACbZ,EAAQC,YAASY,IAPV,yCAQI7L,EAAS,CACtB2C,KAAMqB,IACNF,QAAS,CAACoH,OAAQF,MAVT,uBAaOG,YAAYU,GAbnB,OAaPT,EAbO,OAcPwD,EAAQP,EAASzI,aAEV0D,KADPuF,EAfO,OAeCD,QAfD,IAeCA,GAfD,UAeCA,EAAOE,YAAYC,sBAfpB,aAeC,EAAmCnH,SAExC,OAALgH,QAAK,IAALA,KAAOE,YAAYE,YAAYH,EAAO,QAAtC,UAAkDzD,EAAMvM,OAE5DmB,EAAS,CAAE2C,KAAMqB,IAAOF,QAAS,CAAEkE,SAAS,KAnB/B,8CAqBlB,CAAChI,IAUJ,OARAa,qBAAU,WACN,IAAM+N,EAAQP,EAASzI,QACnBgJ,GAEUA,EAAME,YAAYG,UAAU,WAClCC,WAAW,QAASZ,KAC7B,IAGC,8BACK,cAAC,IAAD,CACGtJ,QAASA,EACTE,MAAM,OACNrC,SA9CS,SAACT,GAClB0C,EAAQ1C,IA8CAmD,IAAK8I,O,wBCgBNc,UAnEI,WACf,IAAMC,EAAe,CACjBnN,KAAM,GACNwG,MAAO,GACPnC,QAAS,GACT8H,YAAa,GACbH,UAAW,GACXnN,SAAU,GACV2F,WAAW,IAAID,MAAOQ,eARL,EAWG5G,mBAAgBgP,GAXnB,mBAWd3N,EAXc,KAWRqH,EAXQ,KAYfuG,EAAUpP,cAZK,EAaQL,aAAY,SAACC,GAAD,OAAsBA,KAAvDmC,EAba,EAabA,KAba,KAaPlC,WACUM,mBAAS,KAdZ,mBAcd2E,EAdc,KAcRD,EAdQ,OAeG1E,mBAAS,IAfZ,mBAedkP,EAfc,KAeRC,EAfQ,KAgBfnK,EAASC,iBAAuB,MAEhCmK,EAAY,uCAAG,8BAAAxQ,EAAA,yDACbgD,EAAKM,aADQ,oDAEP,GAGa,KADjB0I,EAAQyE,YAAgB,2BAAIhO,GAAL,IAAW6E,QAASgJ,MACxCI,UALQ,yCAMNL,EAAQ,CAAC1M,KAAMqB,IAAOF,QAAS,CAACoH,OAAQF,EAAM2E,WANxC,OASbC,EATa,2BASCnO,GATD,IASO6E,QAASvB,IACjCsK,EAAQQ,YAAWD,EAAS5N,EAAKM,eAVhB,2CAAH,qDAqBlB,OAPAzB,qBAAU,WACN,IAAM8E,EAAG,OAAGP,QAAH,IAAGA,OAAH,EAAGA,EAAQQ,QACpB,GAAID,EAAJ,CACA,IAAM2J,EAAI,OAAI3J,QAAJ,IAAIA,OAAJ,EAAIA,EAAKE,UACnB0J,EAAQD,MACT,CAACvK,IAEA/C,EAAKM,aAEL,sBAAKf,UAAU,WAAf,UACI,sBAAKA,UAAU,WAAf,UACI,wCACA,cAAC,EAAD,CACIE,KAAMA,EACNqH,QAASA,OAGjB,sBAAKvH,UAAU,WAAf,UACI,yCACA,cAACgJ,EAAA,EAAD,CAAW9I,KAAMA,OAGrB,cAACqO,EAAD,CAAYhL,QAASA,IACrB,qBAAKS,IAAKH,EAAQI,wBAAyB,CACvCC,OAAQV,GACTL,MAAO,CAACgB,QAAS,UACpB,gCAAQ4J,EAAKzH,SACb,wBAAQtG,UAAU,oCAClBmB,QAAS8M,EADT,4BApBsB,cAACxD,EAAA,EAAD,M,sGC6BnB+D,EA3EM,WACjB,IADuB,EAEiB3P,mBADnB,CAACa,KAAM,GAAIgJ,QAAS,GAAIQ,SAAU,GAAIC,YAAa,KADjD,mBAEhBsF,EAFgB,KAEFC,EAFE,KAGhBhP,EAAwC+O,EAAxC/O,KAAMgJ,EAAkC+F,EAAlC/F,QAASQ,EAAyBuF,EAAzBvF,SAAUC,EAAesF,EAAftF,YAHT,EAIStK,oBAAS,GAJlB,mBAIhBwK,EAJgB,KAINC,EAJM,OAKazK,oBAAS,GALtB,mBAKhB0K,EALgB,KAKJoF,EALI,KAMjBlQ,EAAWC,cAEX8K,EAAoB,SAAC3I,GAAqB,IAAD,EACrBA,EAAEU,OAAjBF,EADoC,EACpCA,MAAO3B,EAD6B,EAC7BA,KACdgP,EAAgB,2BAAID,GAAL,kBAAoB/O,EAAO2B,MAQ9C,OACI,uBAAMT,SANW,SAACC,GAClBA,EAAEC,iBACFrC,EAASmQ,YAASH,KAIlB,UACI,sBAAKzO,UAAU,kBAAf,UACI,uBAAOkB,QAAQ,OAAf,kBACA,uBACIE,KAAK,OACLpB,UAAU,eACVN,KAAK,OACLG,GAAG,OACHwB,MAAO3B,EACP4B,SAAUkI,OAGlB,sBAAKxJ,UAAU,kBAAf,UACI,uBAAOkB,QAAQ,UAAf,gCACA,uBACIE,KAAK,OACLpB,UAAU,eACVN,KAAK,UACLG,GAAG,UACHwB,MAAOqH,EACPpH,SAAUkI,OAGlB,sBAAKxJ,UAAU,kBAAf,UACI,uBAAOkB,QAAQ,WAAWlB,UAAU,aAApC,sBACA,uBACIoB,KAAMiI,EAAW,OAAS,WAC1BrJ,UAAU,eACVN,KAAK,WACLG,GAAG,WACHwB,MAAO6H,EACP5H,SAAUkI,IAEd,uBAAOrI,QAAS,kBAAMmI,GAAaD,IAAnC,SAA+CA,EAAW,OAAS,YAEvE,sBAAKrJ,UAAU,kBAAf,UACI,uBAAOkB,QAAQ,cAAclB,UAAU,aAAvC,8BACA,uBACIoB,KAAMmI,EAAa,OAAS,WAC5BvJ,UAAU,eACVN,KAAK,cACLG,GAAG,cACHwB,MAAO8H,EACP7H,SAAUkI,IAEd,uBAAOrI,QAAS,kBAAMwN,GAAepF,IAArC,SAAmDA,EAAa,OAAS,YAG7E,wBACInI,KAAK,SACLpB,UAAU,0BAFd,0BC9CG6O,UApBE,WAAO,IAAD,EACGhQ,oBAAS,GADZ,6BAGnB,OACI,qBAAKmB,UAAU,YAAf,SACI,sBAAKA,UAAU,WAAf,UACI,oBAAIA,UAAU,kCAAd,sBAEA,cAAC,EAAD,IACA,+DAEI,cAAC,IAAD,CAAMgD,GAAE,SAAYG,MAAO,CAACoD,MAAO,WAAnC,iC,0CCjBpB,IAAItG,EAAM,CACT,KAAM,GACN,kBAAmB,GACnB,sBAAuB,GACvB,gBAAiB,IACjB,oBAAqB,IACrB,iBAAkB,IAClB,qBAAsB,IACtB,aAAc,IACd,iBAAkB,IAClB,gBAAiB,IACjB,oBAAqB,IACrB,UAAW,GACX,cAAe,GACf,UAAW,IACX,cAAe,IACf,mBAAoB,IACpB,uBAAwB,IACxB,aAAc,IACd,iBAAkB,KAInB,SAAS6O,EAAeC,GACvB,IAAIlP,EAAKmP,EAAsBD,GAC/B,OAAOE,EAAoBpP,GAE5B,SAASmP,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAEjP,EAAK8O,GAAM,CACpC,IAAIlO,EAAI,IAAIsO,MAAM,uBAAyBJ,EAAM,KAEjD,MADAlO,EAAEuO,KAAO,mBACHvO,EAEP,OAAOZ,EAAI8O,GAEZD,EAAeO,KAAO,WACrB,OAAOC,OAAOD,KAAKpP,IAEpB6O,EAAeS,QAAUP,EACzBQ,EAAOC,QAAUX,EACjBA,EAAejP,GAAK,K,sHC7BP6F,EAAa,uCAAG,WAAOlI,EAAeiB,GAAtB,eAAAhB,EAAA,2DACFiS,YAAWlS,GACxBmS,IAAM1K,KAAK2K,MAAQ,KAFJ,iEAIP9R,YAAO,kBAJA,cAInBD,EAJmB,OAKzBY,EAAS,CACL2C,KAAM0I,IACNvH,QAAS1E,EAAIkC,OAPQ,kBASlBlC,EAAIkC,KAAKgB,cATS,2CAAH,yD,8SCHb+J,EAAQ,SAACF,GAAD,8CAA2B,WAAOnM,GAAP,eAAAhB,EAAA,sEAExCgB,EAAS,CACL2C,KAAMqB,IACNF,QAAS,CACLkE,SAAS,KALuB,SAQtBpJ,YAAQ,QAASuN,GARK,OAQlC/M,EARkC,OAUxCY,EAAS,CACL2C,KAAM,OACNmB,QAAS1E,EAAIkC,OAGjBtB,EAAS,CACL2C,KAAMqB,IACNF,QAAS,CACLkE,SAAS,EACT8B,QAAS,sBAGjBsH,aAAaC,QAAQ,SAAU,QAtBS,kDAwBxCrR,EAAS,CACL2C,KAAMqB,IACNF,QAAS,CACLoH,OAAQ,KAAMjH,SAAS3C,KAAK+H,OAGpClC,QAAQC,IAAI,KAAMnD,SAAS3C,KAAK+H,KA9BQ,0DAA3B,uDAmCR4D,EAAc,SAACD,GAAD,8CAAqB,WAAOhN,GAAP,eAAAhB,EAAA,sEAExCgB,EAAS,CACL2C,KAAMqB,IACNF,QAAS,CAACkE,SAAS,KAJiB,SAMtBpJ,YAAQ,eAAe,CAACoO,aANF,OAMlC5N,EANkC,OAOxCY,EAAS,CACL2C,KAAM0I,IACNvH,QAAS1E,EAAIkC,OAEjBtB,EAAS,CACL2C,KAAMqB,IACNF,QAAS,CAACgG,QAAS1K,EAAIkC,KAAK+H,OAEhC+H,aAAaC,QAAQ,SAAU,QAfS,kDAiBxCrR,EAAS,CACL2C,KAAMqB,IACNF,QAAS,CAACoH,OAAQ,KAAMjH,SAAS3C,KAAK+H,OAnBF,0DAArB,uDAwBdkE,EAAgB,SAACF,EAAqBC,GAAtB,8CAAyC,WAAOtN,GAAP,eAAAhB,EAAA,sEAE9DgB,EAAS,CACL2C,KAAMqB,IACNF,QAAS,CAACkE,SAAS,KAJuC,SAM5CpJ,YAAQ,iBAAkB,CAACyO,cAAaC,WANI,OAMxDlO,EANwD,OAO9DY,EAAS,CACL2C,KAAM0I,IACNvH,QAAS1E,EAAIkC,OAEjBtB,EAAS,CACL2C,KAAMqB,IACNF,QAAS,CAACgG,QAAS1K,EAAIkC,KAAK+H,OAEhC+H,aAAaC,QAAQ,SAAU,QAf+B,kDAkB9DrR,EAAS,CACL2C,KAAMqB,IACNF,QAAS,CAACoH,OAAQ,KAAMjH,SAAS3C,KAAK+H,OApBoB,0DAAzC,uDAyBhBiI,EAAS,SAACvS,GAAD,8CAAmB,WAAOiB,GAAP,iBAAAhB,EAAA,sEAChBiI,YAAclI,EAAOiB,GADL,cAC/BkH,EAD+B,OAE/B5E,EAAe4E,GAAkBnI,EACvCqS,aAAaG,WAAW,UAHa,SAK/BlS,YAAO,SAAUiD,GALc,OAMrCkB,OAAO0E,SAASsJ,KAAO,IANc,2CAAnB,uDASTrB,EAAW,SAACH,GAAD,8CAAiC,WAAOhQ,GAAP,iBAAAhB,EAAA,yDACrDmI,QAAQC,IAAI4I,MACNhF,EAAQyG,YAAczB,IACnB0B,SAAW,GAHiC,yCAI1C1R,EAAS,CACZ2C,KAAMqB,IACNF,QAAS,CACLoH,OAAQF,EAAM2G,WAP2B,uBAajD3R,EAAS,CACL2C,KAAMqB,IACNF,QAAS,CACLkE,SAAS,KAhBgC,SAoB/BpJ,YAAQ,WAAYoR,GApBW,OAoB3C5Q,EApB2C,OAqBjD+H,QAAQC,IAAIhI,GAEZY,EAAS,CACL2C,KAAMqB,IACNF,QAAS,CACLgG,QAAS1K,EAAIkC,KAAK+H,OA1BuB,kDA8BjDrJ,EAAS,CACL2C,KAAMqB,IACNF,QAAS,CACLoH,OAAQ,KAAMjH,SAAS3C,KAAK+H,OAGpClC,QAAQC,IAAI,KAAMnD,SAAS3C,KAAK+H,KApCiB,0DAAjC,uDAwCXuI,EAAe,yDAAM,WAAO5R,GAAP,iBAAAhB,EAAA,yDACxB6S,EAAST,aAAaU,QAAQ,UACpC3K,QAAQC,IAAI,OAAOyK,GAEL,SAAXA,EAJ2B,iEAMtB7R,EAAS,CAAC2C,KAAMqB,IAAOF,QAAS,CAACkE,SAAS,KANpB,SAQJ3I,YAAO,iBARH,OAQhBD,EARgB,OAStBY,EAAS,CAAE2C,KAAM0I,IAAKvH,QAAS1E,EAAIkC,OAEnCtB,EAAS,CAAE2C,KAAMqB,IAAOF,QAAS,KAXX,kDAatB9D,EAAS,CAAC2C,KAAMqB,IAAOF,QAAS,CAACkE,SAAS,KAC1Cb,QAAQC,IAAI,KAAMnD,UAdI,0DAAN,wD,gCC3I5B,sGAAO,IAAM8N,EAAiB,iBACjBC,EAAwB,wBACxBC,EAAoB,qB,0HCYlBC,EAdA,WACb,OACE,sBAAK3Q,UAAU,4BAAf,UACE,iEACA,mBAAGiQ,KAAK,sCACR1O,OAAO,SAASqP,IAAI,aACpB5Q,UAAU,eAFV,iDAKA,yD,QC0DS6Q,EA9DF,WAAO,IAAD,EACTpQ,EAASpC,aAAY,SAACC,GAAD,OAAsBA,KAA3CmC,KACDqQ,EAAYlK,cAAZkK,SACDrS,EAAWC,cAYXqS,EAAWtQ,EAAKM,aALD,CACnB,CAAEiQ,MAAO,OAAQC,KAAM,KACvB,CAAED,MAAO,aAAcC,KAAM,iBAPV,CACnB,CAAED,MAAO,QAASC,KAAM,UACxB,CAAED,MAAO,WAAYC,KAAM,cASvBC,EAAW,SAACC,GAChB,GAAGA,IAAOL,EAAU,MAAO,UAQ7B,OACE,qBAAI9Q,UAAU,qBAAd,UAEI+Q,EAAS9Q,KAAI,SAACmR,EAAM/K,GAAP,OACX,oBAAgBrG,UAAS,mBAAckR,EAASE,EAAKH,OAArD,SACE,cAAC,IAAD,CAAMjR,UAAU,WAAWgD,GAAIoO,EAAKH,KAApC,SAA2CG,EAAKJ,SADzC3K,MAMS,WAApB,UAAA5F,EAAKC,YAAL,eAAWC,OACT,oBAAIX,UAAS,mBAAckR,EAAS,cAApC,SACE,cAAC,IAAD,CAAMlO,GAAI,YAAahD,UAAU,WAAjC,wBAKJS,EAAKC,MACH,qBAAIV,UAAU,oBAAd,UACE,uBAAMA,UAAU,2BAA2BH,GAAG,iBAAiBc,KAAK,SAAS0Q,iBAAe,WAAWC,gBAAc,QAArH,UACG7Q,EAAKC,KAAKgI,QACX,qBAAK7F,IAAKpC,EAAKC,KAAKoC,OAAQ9C,UAAU,cAGxC,qBAAIA,UAAU,gBAAgBuR,kBAAgB,iBAA9C,UACE,6BAAI,cAAC,IAAD,CAAMvR,UAAU,gBAAgBgD,GAAE,mBAAcvC,EAAKC,KAAKf,KAA1D,uBACJ,6BAAI,oBAAIK,UAAU,uBAClB,6BAAI,cAAC,IAAD,CAAMA,UAAU,gBAAgBgD,GAAG,IAAI7B,QAhClC,WACfV,EAAKM,cACTtC,EAASsR,YAAOtP,EAAKM,gBA8BP,gC,8CCAHyQ,EArDA,WAAO,IAAD,EACW3S,mBAAS,IADpB,mBACVoI,EADU,KACFwK,EADE,OAES5S,mBAAkB,IAF3B,mBAEVG,EAFU,KAEHC,EAFG,KAGT6R,EAAalK,cAAbkK,SAuBR,OArBAxR,qBAAU,WACN,IAAMoS,EAAgBC,WAAU,sBAAC,4BAAAlU,EAAA,2DAC1BwJ,EAAOX,OAAS,GADU,yCACArH,EAAS,KADT,gCAIPnB,YAAO,sBAAD,OAAuBmJ,IAJtB,OAInBpJ,EAJmB,OAKzBoB,EAASpB,EAAIkC,MALY,gDAOzB6F,QAAQC,IAAR,MAPyB,yDAS9B,KAEJ,OAAO,kBAAM+L,aAAaF,MAE1B,CAACzK,IAEJ3H,qBAAU,WACNmS,EAAU,IACVxS,EAAS,MACV,CAAC6R,IAGA,sBAAK9Q,UAAU,sCAAf,UACI,uBAAOoB,KAAK,OAAOpB,UAAU,0BACzBqB,MAAO4F,EAAQ4K,YAAY,uBAC3BvQ,SAAU,SAAAT,GAAC,OAAI4Q,EAAU5Q,EAAEU,OAAOF,UAGlC4F,EAAOX,QAAU,GACjB,qBAAKtG,UAAU,4CACXmD,MAAO,CACH2O,WAAY,OAAQC,OAAQ,GAC5BC,UAAW,sBACXC,SAAU,QAJlB,SAOQjT,EAAMsH,OACAtH,EAAMiB,KAAI,SAAAC,GAAI,OACZ,cAAC8I,EAAA,EAAD,CAA0B9I,KAAMA,GAAhBA,EAAKP,QAEvB,oBAAIK,UAAU,cAAd,4BCffkS,EA/BA,WACQtL,cAAZkK,SAMP,OACI,sBAAK9Q,UAAU,oDAAf,UACA,cAAC,IAAD,CAAMA,UAAU,eAAegD,GAAG,IAAlC,qBAEA,wBACEhD,UAAU,iBACVoB,KAAK,SACLiQ,iBAAe,WACfc,iBAAe,aACfC,gBAAc,YACdd,gBAAc,QACde,aAAW,oBAPb,SASE,sBAAMrS,UAAU,0BAGlB,sBAAKA,UAAU,2BAA2BH,GAAG,YAA7C,UACE,cAAC,EAAD,IACA,cAAC,EAAD,W,QCFKyS,EAZI,WACjB,IAAM1J,EAAkBhK,cAEpBc,EAAO,GAMX,OAJGkJ,EAAO2J,OACR7S,EAAOkJ,EAAOjK,KAAP,UAAiBiK,EAAO2J,KAAxB,qBAA2C3J,EAAO2J,OAhBxC,SAAC7S,GAGpB,IACE,OAAO8S,IAAMtF,cAHSuF,OAAQ,YAAW/S,IAAQgT,SAIjD,MAAO7K,GACP,OAAO,cAAC4C,EAAA,EAAD,KAaFkI,CAAajT,I,yBCvBTkT,EAAS,S,QCyCPC,EAtCM,WAAO,IAChBnL,EAAWrJ,aAAY,SAACC,GAAD,OAAsBA,KAA7CoJ,OACFjJ,EAAWC,cA6BjB,OA1BAY,qBAAU,WACN,GAAIoI,EASJ,OAPAA,EAAOoL,GAAG,iBAAiB,SAAC/S,GACxBtB,EAAS,CACL2C,KAAM2R,IACNxQ,QAASxC,OAIV,WAAS2H,EAAOsL,IAAI,oBAC5B,CAACtL,EAAQjJ,IAEZa,qBAAU,WACN,GAAIoI,EASJ,OAPAA,EAAOoL,GAAG,gBAAgB,SAAC/S,GACvBtB,EAAS,CACL2C,KAAM6R,IACN1Q,QAASxC,OAIV,WAAS2H,EAAOsL,IAAI,mBAC5B,CAACtL,EAAQjJ,IAGR,yBCgBOyU,MAvCf,WACE,IAAMzU,EAAWC,cAqBjB,OAnBAY,qBAAU,WACRb,EAAS4R,eACT5R,EAAS0U,eACT1U,EAAS2U,iBAER,CAAC3U,IAEJa,qBAAU,WACR,IAAMoI,EAAS2L,cAKf,OAJA5U,EAAS,CACP2C,KAAMwR,EACNrQ,QAASmF,IAEJ,WAAQA,EAAO4L,WACrB,IAMD,sBAAKtT,UAAU,YAAf,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAACuT,EAAA,EAAD,IACF,cAAC,EAAD,IACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOtC,KAAK,IAAIuC,eAAe,EAAOC,QAAS,cAAC,EAAD,MAC/C,cAAC,IAAD,CAAOxC,KAAK,SAASuC,eAAe,EAAOC,QAAS,cAAC,EAAD,MACpD,cAAC,IAAD,CAAOxC,KAAK,eAAeuC,eAAe,EAAOC,QAAS,cAAC,EAAD,SAE5D,cAAC,EAAD,W,gBCnCOC,EAVK,WAAkD,IAAjDpV,EAAgD,uDAAjC,GAAIqV,EAA6B,uCACjE,OAAOA,EAAOvS,MACV,KAAK0I,IACD,OAAO6J,EAAOpR,QAElB,QACI,OAAOjE,I,OCKJsV,EAVM,WAA8C,IAA7CtV,EAA4C,uDAA5B,GAAIqV,EAAwB,uCAC9D,OAAOA,EAAOvS,MACV,KAAKqB,IACD,OAAOkR,EAAOpR,QAElB,QACI,OAAOjE,I,uBCaJuV,EAnBS,WAAwE,IAAvEvV,EAAsE,uDAAjD,GAAIqV,EAA6C,uCAC3F,OAAOA,EAAOvS,MACV,KAAK0S,IACD,MAAM,CAAEH,EAAOpR,SAAf,mBAA2BjE,IAE/B,KAAKwV,IACD,OAAOH,EAAOpR,QAElB,KAAKuR,IACD,OAAOxV,EAAM2B,KAAI,SAAAR,GAAI,OACjBA,EAAKE,MAAQgU,EAAOpR,QAAQ5C,IAA5B,2BAAsCF,GAAtC,IAA4CC,KAAMiU,EAAOpR,QAAQ7C,OAAOD,KAEhF,KAAKqU,IACG,OAAOxV,EAAMyV,QAAO,SAAAtU,GAAI,OAAIA,EAAKE,MAAQgU,EAAOpR,WACxD,QACI,OAAOjE,I,QCPJ0V,EATU,WAAwD,IAAvD1V,EAAsD,uDAAvC,GAAIqV,EAAmC,uCAC5E,OAAQA,EAAOvS,MACX,KAAKoP,IACD,OAAOmD,EAAOpR,QAClB,QACI,OAAOjE,ICaJ2V,EAlBc,WAGL,IAFpB3V,EAEmB,uDAFO,GAC1BqV,EACmB,uCACnB,OAAQA,EAAOvS,MACX,KAAKqP,IACD,OAAGnS,EAAMsB,OAAM,SAAAH,GAAI,OAAIA,EAAKI,KAAO8T,EAAOpR,QAAQ1C,MACxC,GAAN,mBAAWvB,GAAX,CAAkBqV,EAAOpR,UAElBjE,EAAM2B,KAAI,SAAAC,GAAI,OACjBA,EAAKL,KAAO8T,EAAOpR,QAAQ1C,GAAK8T,EAAOpR,QAASrC,KAG5D,QACI,OAAO5B,I,QCCJ4V,EAdU,WAGnB,IAFF5V,EAEC,uDAFgB,GACjBqV,EACC,uCACD,OAAQA,EAAOvS,MACX,KAAKkH,IAED,OADA1C,QAAQC,IAAI8N,EAAOpR,SACb,GAAN,mBAAWjE,GAAX,CAAkBqV,EAAOpR,UAE7B,QACI,OAAOjE,ICOJ6V,EAlBU,WAGd,IAFP7V,EAEM,uDAFgB,GACtBqV,EACM,uCACN,OAAQA,EAAOvS,MACX,KAAKsP,IACD,OAAGpS,EAAMsB,OAAM,SAAAH,GAAI,OAAIA,EAAKI,KAAO8T,EAAOpR,QAAQ1C,MACxC,GAAN,mBAAWvB,GAAX,CAAkBqV,EAAOpR,UAElBjE,EAAM2B,KAAI,SAAAC,GAAI,OACjBA,EAAKL,KAAO8T,EAAOpR,QAAQ1C,GAAK8T,EAAOpR,QAASrC,KAG5D,QACI,OAAO5B,ICdbuP,EAAe,CACjB9N,KAAM,GACNb,MAAO,GAoCIkV,EAjCQ,WAGF,IAFjB9V,EAEgB,uDAFOuP,EACvB8F,EACgB,uCAChB,OAAQA,EAAOvS,MACX,KAAK2R,IACD,OAAO,2BACAzU,GADP,IAEIyB,KAAK,CAAE4T,EAAOpR,SAAV,mBAAsBjE,EAAMyB,SAExC,KAAKuC,IACD,OAAOqR,EAAOpR,QAElB,KAAK0Q,IACD,OAAO,2BACA3U,GADP,IAEIyB,KAAMzB,EAAMyB,KAAKE,KAAI,SAAAR,GAAI,OACrBA,EAAKE,MAAQgU,EAAOpR,QAAQiD,aAA5B,2BAEO/F,GAFP,IAGI6F,QAAQ,GAAD,mBACA7F,EAAK6F,SADL,CAEHqO,EAAOpR,YAEX9C,OAIhB,QACI,OAAOnB,ICzBJ+V,EATO,WAA6C,IAA5C/V,EAA2C,uDAA9B,KAAMqV,EAAwB,uCAC9D,OAAQA,EAAOvS,MACX,KAAKwR,EACD,OAAOe,EAAOpR,QAClB,QACI,OAAOjE,ICIJgW,cAAgB,CAC3B7T,OACA8T,QACAhW,aACAiW,YACAhW,gBACA6J,YACAQ,YACArG,WACAkF,W,SCXE+M,EAAmBxS,OAAOyS,sCAAwCC,IAOzDC,EALDC,YACVC,EACAL,EAAiBM,YAAgBC,OCNrCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJ3H,SAASmI,eAAe,U,gCCb1B,gBAYe3K,IAVE,WACb,OACI,qBAAKzK,UAAU,oBAAoBmD,MAAO,CAACkS,UAAW,sBAAtD,SACI,oBAAIrV,UAAU,oBACVmD,MAAO,CAACmS,IAAK,MAAOC,KAAM,MAAOC,UAAW,yBADhD,iC,+BCJZ,kCAAO,IAAM/S,EAAQ,S,gCCArB,kCAAO,IAAMqH,EAAO,Q,iPCQPwE,EAAa,SAACpO,EAAa1C,GAAd,8CAA+B,WAAOiB,GAAP,uBAAAhB,EAAA,+EAG5BiI,YAAclI,EAAOiB,GAHO,UAG3CkH,EAH2C,OAI3C5E,EAAe4E,GAAkBnI,EACvCiB,EAAS,CAAE2C,KAAMqB,IAAOF,QAAS,CAACkE,SAAS,KAEZ,kBAApBvG,EAAKwM,UAPiC,iCAQzB9C,YAAY1J,EAAKwM,WARQ,OAQvC7C,EARuC,OAS7CvM,EAAMuM,EAAMvM,IATiC,wBAW7CA,EAAM4C,EAAKwM,UAXkC,eAc3C+I,EAd2C,2BAc7BvV,GAd6B,IAcvBwM,UAAWpP,IAdY,UAe/BD,YAAQ,QAASoY,EAAS1U,GAfK,eAiBjDtC,EAAS,CAAE2C,KAAMqB,IAAOF,QAAS,CAACkE,SAAS,KAjBM,kDAmBjDhI,EAAS,CAAC2C,KAAMqB,IAAOF,QAAS,CAACoH,OAAQ,KAAMjH,SAAS3C,KAAK+H,IAAKrB,SAAS,KAnB1B,0DAA/B,uDAuBb2M,EAAe,yDAAK,WAAO3U,GAAP,eAAAhB,EAAA,sEAEzBgB,EAAS,CAAE2C,KAAMqB,IAAOF,QAAS,CAACkE,SAAS,KAFlB,SAGP3I,YAAO,cAHA,OAGnBD,EAHmB,OAIzBY,EAAS,CACL2C,KAAMoP,IACNjO,QAAS1E,EAAIkC,OAGjBtB,EAAS,CAAE2C,KAAMqB,IAAOF,QAAS,CAACkE,SAAS,KATlB,gDAWzBhI,EAAS,CAAC2C,KAAMqB,IAAOF,QAAS,CAACoH,OAAQ,KAAMjH,SAAS3C,KAAK+H,IAAKrB,SAAS,KAXlD,yDAAL,uDAef3G,EAAuB,SAACD,EAAY6V,GAAb,8CAA2B,WAAOjX,GAAP,eAAAhB,EAAA,sEAE3C,EACZgB,EAAS,CAAE2C,KAAMqB,IAAOF,QAAS,CAACkE,SAAS,KAHY,SAIrC3I,YAAO,kBAAD,OAAmB+B,EAAnB,iBAA8B6V,EAA9B,kBAFZ,IAF2C,OAIjD7X,EAJiD,OAKvDY,EAAS,CACL2C,KAAMqP,IACNlO,QAAQ,2BACD1E,EAAIkC,MADJ,IAEHF,SAIRpB,EAAS,CAAE2C,KAAMqB,IAAOF,QAAS,CAACkE,SAAS,KAbY,kDAevDhI,EAAS,CAAC2C,KAAMqB,IAAOF,QAAS,CAACoH,OAAQ,KAAMjH,SAAS3C,KAAK+H,IAAKrB,SAAS,KAfpB,0DAA3B,uDAmBvBsC,EAAmB,SAAClJ,EAAYoH,GAAb,8CAA+B,WAAOxI,GAAP,iBAAAhB,EAAA,sEAE3C,EACR4D,EAAQ4F,GAAM,gBAAqB,GACvCxI,EAAS,CAAE2C,KAAMqB,IAAOF,QAAS,CAACkE,SAAS,KAJY,SAKrC3I,YAAO,cAAD,OAAe+B,GAAf,OAAoBwB,EAApB,kBAHZ,IAF2C,OAKjDxD,EALiD,OAOvDY,EAAS,CACL2C,KAAMsP,IACNnO,QAAQ,2BACD1E,EAAIkC,MADJ,IAEHF,SAIRpB,EAAS,CAAE2C,KAAMqB,IAAOF,QAAS,CAACkE,SAAS,KAfY,kDAiBvDhI,EAAS,CAAC2C,KAAMqB,IAAOF,QAAS,CAACoH,OAAQ,KAAMjH,SAAS3C,KAAK+H,IAAKrB,SAAS,KAjBpB,0DAA/B,wD,gCChEhC,wIAAO,IAAMkP,EAAkB,kBAClBC,EAAiB,iBACjBC,EAAkB,kBAClBC,EAAkB,mB,gCCH/B,sGAAO,IAAM/C,EAAiB,iBACjBzQ,EAAc,cACd2Q,EAAgB,iB,+HCJhBvJ,EAAW,SAACY,GACrB,IACIzC,EAAM,GACV,OAAIyC,GAEDA,EAAKyL,KAAO,UACXlO,EAAM,iCALI,CAAC,YAAa,cAMlBmO,SAAS1L,EAAKlJ,QACpByG,EAAM,8BACCA,GANY,mCASd+B,EAAW,uCAAG,WAAOU,GAAP,mBAAA7M,EAAA,6DACjBwY,EAAW,IAAIC,UACZC,OAAO,OAAQ7L,GACxB2L,EAASE,OAAO,gBAAiB,YACjCF,EAASE,OAAO,aAAc,aAJP,SAMLC,MAAM,mDAAoD,CACxEC,OAAQ,OACR7S,KAAMyS,IARa,cAMjBpY,EANiB,gBAWJA,EAAIyY,OAXA,cAWjBvW,EAXiB,yBAYhB,CAACwW,UAAWxW,EAAKwW,UAAWjZ,IAAKyC,EAAKyW,aAZtB,4CAAH,uD,4KCkCTC,EArCD,SAAC,GAAoC,IAAnCvP,EAAkC,EAAlCA,MAAO1D,EAA2B,EAA3BA,KAAMkT,EAAqB,EAArBA,QAErBjY,EAAWC,cAMjB,OACE,sBAAKsB,UAAS,+CAA0C0W,GACxDvT,MAAO,CAACmS,IAAK,MAAO7I,MAAO,MAAOsF,OAAQ,GAAI4E,SAAU,SADxD,UAGE,sBAAK3W,UAAS,kCAA6B0W,GAA3C,UACE,wBAAQ1W,UAAU,UAAlB,SAA6BkH,IAC7B,wBAAQ9F,KAAK,SAASpB,UAAU,YAChC4W,kBAAgB,QAAQvE,aAAW,QACnClR,QAZc,WAClB1C,EAAS,CAAE2C,KAAMqB,IAAOF,QAAS,WAc/B,qBAAKvC,UAAU,aAAf,SAEqB,kBAAVwD,EACLA,EACA,6BAEEA,EAAKvD,KAAI,SAAC8N,EAAM1H,GAAP,OACP,6BAAiB0H,GAAR1H,cC7BZkN,EAAQ,WAAO,IACjBgB,EAASlW,aAAY,SAACC,GAAD,OAAsBA,KAA3CiW,MAEP,OACI,gCACKA,EAAM9N,SAAW,cAACW,EAAA,EAAD,IAEdmN,EAAM5K,QACN,cAAC,EAAD,CACIzC,MAAM,QACN1D,KAAI,OAAE+Q,QAAF,IAAEA,OAAF,EAAEA,EAAO5K,OACb+M,QAAQ,cAIZnC,EAAMhM,SACN,cAAC,EAAD,CACIrB,MAAM,UACN1D,KAAI,OAAE+Q,QAAF,IAAEA,OAAF,EAAEA,EAAOhM,QACbmO,QAAQ,mBAQfzO,EAAa,SAACH,GACvB,OAAO,qBAAK9H,UAAU,SAAf,SAAyB8H,KAGvB+O,EAAiB,SAAC/O,GAC3B,OAAO,qBAAK9H,UAAU,aAAf,SAA6B8H,M,gCCtCxC,gBAeeV,IAbC,WACZ,OACI,qBAAKpH,UAAU,iDACXmD,MAAO,CAAE2O,WAAY,QAASvL,MAAO,QAAS+O,IAAK,EAAGC,KAAM,EAAGxD,OAAQ,IAD3E,SAEI,sBAAKpQ,MAAM,MAAMC,OAAO,MAAME,QAAQ,YAAtC,UACI,yBAASgV,OAAO,OAAOC,YAAY,IAAI/U,KAAK,OACxCgV,OAAO,oBACX,sBAAMhV,KAAK,OAAOiV,EAAE,IAAIC,EAAE,KAA1B,4B,gCCPhB,sGAAO,IAAMhH,EAAgB,SAACnQ,GAAyB,IAC3CL,EAAyCK,EAAzCL,KAAMwJ,EAAmCnJ,EAAnCmJ,SAAUR,EAAyB3I,EAAzB2I,QAASS,EAAgBpJ,EAAhBoJ,YAE3BQ,EAAmB,GAEpBjK,EAEMA,EAAK4G,OAAS,IACrBqD,EAAOwN,KAAK,0EAFZxN,EAAOwN,KAAK,uCAKXzO,EAEqBA,GAgCf,wJACD0O,KAAKC,OAjCsC3O,GAiCxB4O,gBAhCzB3N,EAAOwN,KAAK,+EAFZxN,EAAOwN,KAAK,6EAKZjO,EAAS5C,OAAS,EAClBqD,EAAOwN,KAAK,kFACLjO,IAAaC,GACpBQ,EAAOwN,KAAK,oCAGhB,IAAMrP,EAAMkC,EAAcd,EAAUC,GAGpC,OAFIrB,GAAK6B,EAAOwN,KAAKrP,GAEd,CACHsI,OAAQzG,EACRwG,SAAUxG,EAAOrD,SAIZ0D,EAAgB,SAACd,EAAkBC,GAC5C,OAAID,EAAS5C,OAAS,EACV,gCACD4C,IAAaC,EACZ,sCADL,GAeJ,IAAM+E,EAAkB,SAAC,GAElB,IADVhH,EACS,EADTA,MAAOnC,EACE,EADFA,QAAS8H,EACP,EADOA,YAAaH,EACpB,EADoBA,UAAWnN,EAC/B,EAD+BA,SAElCsI,EAAgB,GA0BtB,OAxBGX,EAAM3C,OAAO+B,OAAS,GACrBuB,EAAIsP,KAAK,+BACFjQ,EAAM3C,OAAO+B,OAAS,IAC7BuB,EAAIsP,KAAK,iBAGVpS,EAAQR,OAAO+B,OAAS,KACvBuB,EAAIsP,KAAK,oCAGVtK,EAAYtI,OAAO+B,OAAS,GAC3BuB,EAAIsP,KAAK,0CACFtK,EAAYtI,OAAO+B,OAAS,KACnCuB,EAAIsP,KAAK,4CAGTzK,GACA7E,EAAIsP,KAAK,8BAGT5X,GACAsI,EAAIsP,KAAK,8BAGN,CACH/I,OAAQvG,EACRsG,UAAWtG,EAAIvB,U,gCCnFvB,uBAkDe0C,IA1CqB,SAAC,GAAY,IAAX9I,EAAU,EAAVA,KAClC,OACI,qBAAKF,UAAU,YAAYmD,MAAO,CAACwT,SAAU,SAA7C,SACA,sBAAK3W,UAAU,cAAf,UACE,qBAAKA,UAAU,WAAWmD,MAAO,CAC/BkS,UAAW,QAASrD,UAAW,QAASC,SAAU,UADpD,SAII/R,EAAKwM,WACL,mCAE+B,kBAApBxM,EAAKwM,UACV,cAAC,IAAD,CAAM1J,GAAE,gBAAW9C,EAAKP,KAAxB,SACE,qBAAKkD,IAAK3C,EAAKwM,UACf1M,UAAU,cACV+C,IAAI,YAAYI,MAAO,CAACoU,UAAW,aAEtC,qBAAK1U,IAAKqH,IAAIC,gBAAgBjK,EAAKwM,WACpC1M,UAAU,cACV+C,IAAI,YAAYI,MAAO,CAACoU,UAAW,eAO3C,qBAAKvX,UAAU,WAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,SAA4BE,EAAKgH,QACjC,mBAAGlH,UAAU,YAAb,SAA0BE,EAAK2M,cAC/B,mBAAG7M,UAAU,YAAb,SACE,uBAAOA,UAAU,aAAjB,SACG,IAAIiF,KAAK/E,EAAKgF,WAAWC,iC,+ECgC7BkC,IAhEsB,SAAC,GAAyB,IAAvBnI,EAAsB,EAAtBA,MAAOiB,EAAe,EAAfA,SAAe,EAClCtB,mBAAS,GADyB,mBACnD0T,EADmD,KAC7CiF,EAD6C,KAEpDC,EAAS,YAAIC,MAAMxY,IAAQe,KAAI,SAAC0X,EAAGC,GAAJ,OAAUA,EAAI,KAC7CxL,EAAWC,cAHyC,EAKrCjN,cAAhB0J,EALqD,oBAYpD+O,EAAmB,SAACzX,GACtBgM,EAAS,SAAD,OAAUhM,IAClBoX,EAAQpX,GACRD,EAASC,IAOb,OAJAd,qBAAU,WACMwJ,EAAa/K,IAAI,UAC/B,IAGE,+CACiBmB,EAEb,qBAAKmT,aAAW,0BAAhB,SACI,qBAAIrS,UAAU,aAAd,UAGQuS,EAAO,GACH,oBAAIvS,UAAU,YAAYmB,QAAS,kBAAM0W,EAAiBtF,EAAO,IAAjE,SACI,oBAAGvS,UAAU,YAAYiQ,KAAK,IAAIoC,aAAW,WAA7C,UACI,sBAAM3Q,cAAY,OAAlB,kBACA,sBAAM1B,UAAU,UAAhB,2BAKZyX,EAAOxX,KAAI,SAAAG,GAAG,OACV,oBACIJ,UAAS,qBAlCnBqG,EAkC2CjG,EAjCtDiG,IAAUkM,EAAa,SACnB,KAiCiBpR,QAAS,kBAAM0W,EAAiBzX,IAFpC,SAII,mBAAGJ,UAAU,YAAYiQ,KAAK,IAA9B,SAAmC7P,MArC9C,IAACiG,KA0CEkM,EAAOrT,GACH,oBAAIc,UAAU,YAAYmB,QAAS,kBAAM0W,EAAiBtF,EAAO,IAAjE,SACI,oBAAGvS,UAAU,YAAYiQ,KAAK,IAAIoC,aAAW,OAA7C,UACI,sBAAM3Q,cAAY,OAAlB,kBACA,sBAAM1B,UAAU,UAAhB,iC,gCC7DpC,gBAYeoH,IAVC,WACZ,OACI,8BACI,qBAAKpH,UAAU,8BAA8BW,KAAK,SAAlD,SACA,sBAAMX,UAAU,UAAhB,8B,kOCQCiB,EAAiB,SAC1BvB,EAAclC,GADY,8CAEzB,WAAMiB,GAAN,mBAAAhB,EAAA,+EAEwBiI,YAAclI,EAAOiB,GAF7C,cAESkH,EAFT,OAGS5E,EAAe4E,GAAkBnI,EACvCiB,EAAS,CAAC2C,KAAMqB,IAAOF,QAAS,CAACkE,SAAS,KAJ7C,SAMqBpJ,YAAQ,WAAY,CAACqC,QAAOqB,GANjD,OAMSlD,EANT,OAQGY,EAAS,CACL2C,KAAMuU,IACNpT,QAAS1E,EAAIkC,KAAK+X,cAEtBrZ,EAAS,CAAC2C,KAAMqB,IAAOF,QAAS,CAACkE,SAAS,KAZ7C,kDAeGhI,EAAS,CAAC2C,KAAMqB,IAAOF,QAAS,CAC5BoH,OAAQ,KAAMjH,SAAS3C,KAAK+H,OAhBnC,0DAFyB,uDAuBjBqL,EAAc,yDAAM,WAAM1U,GAAN,mBAAAhB,EAAA,sEAEzBgB,EAAS,CAAC2C,KAAMqB,IAAOF,QAAS,CAACkE,SAAS,KAFjB,SAGP3I,YAAO,YAHA,OAGnBD,EAHmB,OAKzBY,EAAS,CACL2C,KAAMwU,IACNrT,QAAS1E,EAAIkC,KAAKxB,aAEtBE,EAAS,CAAC2C,KAAMqB,IAAOF,QAAS,CAACkE,SAAS,KATjB,gDAYzBhI,EAAS,CAAC2C,KAAMqB,IAAOF,QAAS,CAC5BoH,OAAM,UAAE,KAAMjH,gBAAR,iBAAE,EAAgB3C,YAAlB,aAAE,EAAsB+H,OAbT,yDAAN,uDAkBd9G,EAAiB,SAACjB,EAAiBvC,GAAlB,8CAAoC,WAAMiB,GAAN,qBAAAhB,EAAA,sEACzCiI,YAAclI,EAAOiB,GADoB,cACxDkH,EADwD,OAExD5E,EAAe4E,GAAkBnI,EAFuB,SAK1DiB,EAAS,CACL2C,KAAMyU,IACNtT,QAASxC,IAEbtB,EAAS,CAAC2C,KAAMqB,IAAOF,QAAS,CAACkE,SAAS,KATgB,SAUxCzI,YAAS,YAAD,OAAa+B,EAAKJ,KAAO,CAACD,KAAMK,EAAKL,MAAOqB,GAVZ,cAY1DtC,EAAS,CAAC2C,KAAMqB,IAAOF,QAAS,CAACkE,SAAS,KAZgB,kDAe1DhI,EAAS,CAAC2C,KAAMqB,IAAOF,QAAS,CAC5BoH,OAAM,UAAE,KAAMjH,gBAAR,iBAAE,EAAgB3C,YAAlB,aAAE,EAAsB+H,OAhBwB,0DAApC,uDAqBjB3F,EAAiB,SAACtC,EAAYrC,GAAb,8CAA+B,WAAMiB,GAAN,qBAAAhB,EAAA,sEACpCiI,YAAclI,EAAOiB,GADe,cACnDkH,EADmD,OAEnD5E,EAAe4E,GAAkBnI,EAFkB,SAIrDiB,EAAS,CACL2C,KAAM0U,IACNvT,QAAS1C,IANwC,SASnC3B,YAAU,YAAD,OAAa2B,GAAMkB,GATO,gEAYrDtC,EAAS,CAAC2C,KAAMqB,IAAOF,QAAS,CAC5BoH,OAAM,UAAE,KAAMjH,gBAAR,iBAAE,EAAgB3C,YAAlB,aAAE,EAAsB+H,OAbmB,0DAA/B,wD,gCC5E9B,uBA6CeiQ,IAtCoB,SAAC,GAAY,IAAX7X,EAAU,EAAVA,KACjC,OACI,sBAAKF,UAAU,OAAf,UAE2B,kBAApBE,EAAKwM,WACZ,qBAAK7J,IAAK3C,EAAKwM,UAAW1M,UAAU,eAAe+C,IAAI,MACvDI,MAAO,CAACvB,OAAQ,QAAS2V,UAAW,WAGtC,sBAAKvX,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,SACE,cAAC,IAAD,CAAMgD,GAAE,gBAAW9C,EAAKP,KAAxB,SACGO,EAAKgH,MAAMd,MAAM,EAAE,IAAM,UAG9B,mBAAGpG,UAAU,YAAb,SACIE,EAAK2M,YAAYzG,MAAM,EAAE,KAAO,QAGpC,oBAAGpG,UAAU,2CAAb,UACE,uBAAOA,UAAU,6BAAjB,SAE0B,kBAAfE,EAAKQ,MACZ,eAAC,IAAD,CAAMsC,GAAE,mBAAc9C,EAAKQ,KAAKf,KAAhC,iBACOO,EAAKQ,KAAKhB,UAKrB,uBAAOM,UAAU,aAAjB,SACI,IAAIiF,KAAK/E,EAAKgF,WAAWC,8B,gCCnCvC,kCAAO,IAAMmD,EAAiB,kB,gCCF9B,qDAmDe0P,UA3CF,WAAO,IACRxD,EAAcnW,aAAY,SAACC,GAAD,OAAsBA,KAAhDkW,UAER,OAAwB,IAArBA,EAAUlO,OAAqB,cAAC,IAAD,IAE9B,qBAAKtG,UAAU,YAAf,SAEAwU,EAAUvU,KAAI,SAACgY,GAAD,OACZ,gCAEIA,EAASC,MAAQ,GACjB,qCACE,6BACE,eAAC,IAAD,CAAMlV,GAAE,iBAAciV,EAASvY,KAAM4X,eAArC,UACIW,EAASvY,KADb,IACoB,sCAAUuY,EAASC,MAAnB,YAGtB,oBAAIlY,UAAU,SAEd,qBAAKA,UAAU,aAAf,SAEIiY,EAASjZ,MAAMiB,KAAI,SAACC,GAAD,OACjB,cAAC,IAAD,CAAyBA,KAAMA,GAAhBA,EAAKP,aAQ5BsY,EAASC,MAAQ,GACjB,cAAC,IAAD,CAAMlY,UAAU,6BAChBgD,GAAE,iBAAYiV,EAASvY,MADvB,4BAvBMuY,EAAStY,Y,uFCcdwY,UAxBA,WAAO,IACXxZ,EAAiBC,cAAjBD,KADU,EAEaE,mBAAS,IAFtB,mBAEV0J,EAFU,KAED6P,EAFC,OAGSvZ,mBAAS,IAHlB,mBAGV2I,EAHU,KAGHC,EAHG,KAgBjB,OAXAnI,qBAAU,WACHX,GACCtB,YAAQ,SAAU,CAAEgb,aAAc1Z,IACjCgJ,MAAK,SAAA9J,GAAG,OAAIua,EAAWva,EAAIkC,KAAK+H,QAChCF,OAAM,SAAAC,GACHjC,QAAQC,IAAIgC,EAAIlF,SAChB8E,EAASI,EAAIlF,cAGtB,CAAChE,IAGA,gCACI,8BAAM4J,GAAWsO,YAAetO,KAChC,8BAAMf,GAASS,YAAWT,W","file":"static/js/main.e2f91ca9.chunk.js","sourcesContent":["import axios from \"axios\"\n\nexport const postApi = async (url: string, post: object, token?: any) => {\n    const res = await axios.post(`/api/${url}`, post, {\n        headers: { Authorization: token }\n    })\n\n    return res\n}\n\nexport const getApi = async (url: string, token?: any) => {\n    const res = await axios.get(`/api/${url}`, {\n        headers: { Authorization: token }\n    })\n    return res\n}\n\nexport const patchAPI = async (url: string, post: object, token?: any) => {\n    const res = await axios.patch(`/api/${url}`, post, {\n        headers: { Authorization: token }\n    })\n    return res\n}\n\nexport const deleteAPI = async (url: string, token?: any) => {\n    const res = await axios.delete(`/api/${url}`, {\n        headers: { Authorization: token }\n    })\n    return res\n}","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport CardVert from '../../components/cards/CardVert';\nimport NotFound from '../../components/global/NotFound';\nimport Pagination from '../../components/global/Pagination';\nimport { getBlogsByCategoryId } from '../../redux/actions/blogAction';\nimport { IBlog, IParams, RootStore } from '../../utils/TypeScript';\n\nconst BlogByCategory = () => {\n    const { categories, blogsCategory } = useSelector((state: RootStore) => state)\n    const dispatch = useDispatch()\n    const { slug }: IParams = useParams()\n\n    const [categoryId, setCategoryId] = useState('')\n    const [blogs, setBlogs] = useState<IBlog[]>()\n    const [total, setTotal] = useState(0)\n    const [searchParams] = useSearchParams();\n    let pageParam = searchParams.get('page')\n\n    useEffect(() => {\n        const category = categories.find(item => item.name === slug)\n        if(category) setCategoryId(category._id)\n    }, [slug, categories])\n\n    useEffect(() => {\n        if(!categoryId) return\n\n        if(blogsCategory.every(item => item.id !== categoryId)) {\n            dispatch(getBlogsByCategoryId(categoryId, pageParam))\n        } else {\n            const data = blogsCategory.find(item => item.id === categoryId)\n            if(!data) return;\n\n            setBlogs(data.blogs)\n            setTotal(data.total)\n        }\n    }, [categoryId, blogsCategory, dispatch])\n\n    const handlePagination = (num: number) => {\n        dispatch(getBlogsByCategoryId(categoryId, num))\n    } \n\n\n    if(!blogs) return <NotFound />\n    return (\n        <div className=\"blogs_category\">\n            <div className=\"show_blogs\">\n                {blogs.map(blog => (\n                    <CardVert key={blog._id} blog={blog} />\n                ))}\n            </div>\n\n            {total > 1 && (\n                <Pagination \n                    total={total}\n                    callback={handlePagination}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default BlogByCategory;","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport NotFound from '../components/global/NotFound'\nimport { createCategory, deleteCategory, updateCategory } from '../redux/actions/categoryAction'\nimport { FormSubmit, ICategory, RootStore } from '../utils/TypeScript'\n\nconst Category = () => {\n  const [name, setName] = useState('')\n  const [edit, setEdit] = useState<ICategory | null>(null)\n  const {auth, categories} = useSelector((state: RootStore) => state)\n  const dispatch = useDispatch()\n\n  const handleSubmit = (e: FormSubmit) => {\n      e.preventDefault()\n    if(!auth.access_token || !name) return\n    if(edit) {\n        if(edit.name === name) return\n        const data = {...edit, name}\n        dispatch(updateCategory(data, auth.access_token))\n    } else {\n        dispatch(createCategory(name, auth.access_token))\n        setName('')\n        setEdit(null)\n    }\n  }\n  \n  const handleDelete = (id: string) => {\n      if(!auth.access_token) return\n      if(window.confirm('Ban co chac chan muon xoa?')) {\n        dispatch(deleteCategory(id, auth.access_token))\n      }\n  }\n\n  useEffect(() => {\n      if(edit) setName(edit.name)\n  }, [edit])\n\n  if(auth.user?.role !== 'admin') return <NotFound />\n  return (\n    <div className=\"category\">\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"category\">Category</label>\n\n        <div className=\"d-flex\">\n            {\n                edit && <span onClick={() => setEdit(null)}>X</span>\n            }\n          <input type=\"text\" name=\"category\" id=\"category\"\n          value={name} onChange={e => setName(e.target.value)} />\n\n          <button type=\"submit\">{edit ? 'Update' : 'Create'}</button>\n        </div>\n      </form>\n\n      <div>\n        {\n          categories.map(category => (\n            <div className=\"category_row\" key={category._id}>\n              <p className=\"m-0 text-capitalize\">{category.name}</p>\n\n              <div>\n                <span onClick={() => setEdit(category)}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" aria-hidden=\"true\" role=\"img\" width=\"1em\" height=\"1em\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 1024 1024\"><path d=\"M880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32zm-622.3-84c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 0 0 0-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 0 0 9.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9z\" fill=\"currentColor\"/></svg>\n                </span>\n                <span onClick={() => handleDelete(category._id)}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" aria-hidden=\"true\" role=\"img\" width=\"1em\" height=\"1em\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 1024 1024\"><path d=\"M292.7 840h438.6l24.2-512h-487z\" fill-opacity=\".15\" fill=\"currentColor\"/><path d=\"M864 256H736v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zm-504-72h304v72H360v-72zm371.3 656H292.7l-24.2-512h487l-24.2 512z\" fill=\"currentColor\"/></svg>              \n                </span>\n                </div>\n            </div>\n          ))\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Category","import { Dispatch } from \"redux\";\nimport { checkTokenExp } from \"../../utils/checkTokenExp\";\nimport { getApi, postApi } from \"../../utils/FetchData\";\nimport { IComment } from \"../../utils/TypeScript\";\nimport { ALERT, IAlertType } from \"../types/alertType\";\nimport { CREATE_COMMENT, GET_COMMENT, ICreateCommentType, IGetCommentType, IReplyCommentType, REPLY_COMMENT } from \"../types/commentType\";\n\nexport const createComment = (data: any, token: string) => async (dispatch: Dispatch<IAlertType | ICreateCommentType>) => {\n    const result = await checkTokenExp(token, dispatch)\n    const access_token = result ? result : token\n    try {\n\n        const res = await postApi('comment', data, access_token)\n        // dispatch({\n        //     type: CREATE_COMMENT,\n        //     payload: {\n        //         ...res.data,\n        //         user: data.user\n        //     }\n        // })\n    } catch (error: any) {\n        dispatch({ type: ALERT, payload: error.response.message })\n    }\n}\nexport const getComments = (id: string, num: number) => async (dispatch: Dispatch<IAlertType | IGetCommentType>) => {\n    try {\n        let limit = 4;\n        const res = await getApi(`comments/blog/${id}?page=${num}&limit=${limit}`)\n        dispatch({\n            type: GET_COMMENT,\n            payload: {\n                data: res.data.comments,\n                total: res.data.total\n            }\n        })\n    } catch (error: any) {\n        dispatch({ type: ALERT, payload: error.response.message })\n    }\n}\n\nexport const replyComments = (data: IComment, token: string) => async (dispatch: Dispatch<IAlertType | IReplyCommentType>) => {\n    const result = await checkTokenExp(token, dispatch)\n    const access_token = result ? result : token\n    try {\n        const res = await postApi('reply_comment', data, access_token)\n        \n        // dispatch({\n        //     type: REPLY_COMMENT,\n        //     payload: {\n        //         ...res.data,\n        //         user: data.user,\n        //         reply_user: data.reply_user\n        //     }\n        // })\n    } catch (error) {\n        console.log(error)\n    }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { IUser } from '../../utils/TypeScript';\n\ninterface IProps {\n    user: IUser\n}\nconst AvatarComment: React.FC<IProps> = ({user}) => {\n    return (\n            <div className=\"avatar_comment\">\n                <img src={user.avatar} alt=\"\" />\n                <small className=\"d-block text-break\">\n                    <Link to={`profile/${user._id}`}>{user.name}</Link>\n                </small>\n            </div>\n    );\n};\n\nexport default AvatarComment;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { IUser } from '../../utils/TypeScript';\n\ninterface IProps {\n    user: IUser,\n    user_reply?: IUser\n}\n\nconst AvatarReply: React.FC<IProps> = ({user, user_reply}) => {\n    return (\n        <div className=\"avatar_reply\">\n      <img src={user.avatar} alt=\"avatar\" />\n\n      <div className=\"ms-1\">\n        <small>\n          <Link to={`/profile/${user._id}`}\n          style={{ textDecoration: 'none' }}>\n            { user.name }\n          </Link>\n        </small>\n\n        <small className=\"reply-text\">\n          Reply to <Link to={`/profile/${user_reply?._id}`}>\n            { user_reply?.name }\n          </Link>\n        </small>\n      </div>\n    </div>\n    );\n};\n\nexport default AvatarReply;","import React from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\ninterface IProps {\n    body: string,\n    setBody: (value: string) => void\n}\n\nconst Quill: React.FC<IProps> = ({setBody, body}) => {\n    const modules: any = { toolbar: { container }}\n    const handleChange = (e: any) => {\n        setBody(e)\n    }\n \n    return (\n        <div>\n             <ReactQuill \n                modules={modules}\n                theme=\"snow\"\n                onChange={handleChange}\n                value={body}\n            />\n        </div>\n    );\n};\n\nlet container = [\n    [{ 'font': [] }],\n    [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n    [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown\n  \n    ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\n    ['blockquote', 'code-block'],\n    [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme\n    [{ 'script': 'sub'}, { 'script': 'super' }],\n  ]\n  \n  \n\nexport default Quill;","import React, { useRef, useState } from 'react';\nimport LiteQuill from '../editors/LiteQuill'\n\ninterface IProps {\n    callback: (body: string) => void\n}\n\nconst Input: React.FC<IProps> = ({callback}) => {\n    const [body, setBody] = useState('')\n    const divRef = useRef<HTMLDivElement>(null)\n\n    const handleSubmit = () => {\n        const div = divRef.current\n        const text = (div?.innerText as string)\n        if(!text.trim()) return\n        \n        callback(body)\n    }\n\n    return (\n        <div>\n            <LiteQuill body={body} setBody={setBody} />\n\n            <div ref={divRef} dangerouslySetInnerHTML={{\n                __html: body\n            }} style={{display: 'none'}}/>\n\n            <div className=\"btn btn-success ms-auto d-block\" onClick={handleSubmit}>\n                Send\n            </div>\n        </div>\n    );\n};\n\nexport default Input;","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { replyComments } from '../../redux/actions/commentAction';\nimport { IComment, RootStore } from '../../utils/TypeScript';\nimport Input from './input';\n\ninterface IProps {\n    comment: IComment,\n    showReply: IComment[],\n    setShowReply: (showReply: IComment[]) => void\n}\n\nconst CommentsList: React.FC<IProps> = ({ children, comment, showReply, setShowReply }) => {\n    const [onReply, setOnReply] = useState(false)\n    const dispatch = useDispatch()\n    const { auth } = useSelector((state: RootStore) => state)\n\n    const handleReply = (body: string) => {\n        if(!auth.user || !auth.access_token) return \n        const data = {\n            user: auth.user,\n            blog_id: comment.blog_id,\n            blog_user_id: comment.blog_user_id,\n            content: body,\n            replyCM: [],\n            reply_user: comment.user,\n            comment_root: comment.comment_root || comment._id,\n            createdAt: new Date().toISOString()\n\n        }\n        setShowReply([...showReply, data])\n        dispatch(replyComments(data, auth.access_token))\n        setOnReply(false)\n    }\n      \n    return (\n\n        <div className=\"w-100\">\n            <div className=\"comment_box\">\n                <div className=\"p-2\" dangerouslySetInnerHTML={{\n                    __html: comment.content\n                }} />\n\n                <div className=\"d-flex justify-content-between p-2\">\n                    <small style={{ cursor: 'pointer' }} onClick={() => setOnReply(!onReply)}>\n                       {onReply ? '- Cancel -' : '- Reply -'} \n                    </small>\n\n                    <small>\n                        {new Date(comment.createdAt).toLocaleString()}\n                    </small>\n                </div>\n\n            </div>\n            {onReply && <Input callback={handleReply} />}\n\n            {\n                children\n            }\n        </div>\n\n    );\n};\n\nexport default CommentsList;","import React, { useEffect, useState } from 'react';\nimport { IComment } from '../../utils/TypeScript';\nimport AvatarComment from './AvatarComment';\nimport AvatarReply from './AvatarReply';\nimport CommentsList from './CommentsList';\n\ninterface IPorps {\n    comment: IComment\n}\n\nconst Comments: React.FC<IPorps> = ({comment}) => {\n    const [showReply, setShowReply] = useState<IComment[]>([])\n    const [next, setNext] = useState(2)\n    useEffect(() => {\n        if(!comment.replyCM) return;\n        setShowReply(comment.replyCM)\n      },[comment.replyCM])\n    return (\n        <div className=\"my-3 d-flex\" style={{\n            opacity: comment._id ? 1 : 0.5,\n            pointerEvents: comment._id ? 'initial' : 'none'\n        }}>\n            {comment.user && <AvatarComment user={comment.user} />}\n            <CommentsList\n                comment={comment} \n                showReply={showReply}\n                setShowReply={setShowReply}\n            >\n                {showReply.slice(0, next).map((comment, index) => (\n                    <div key={index} className='my-3 d-flex' style={{\n                        opacity: comment._id ? 1 : 0.5,\n                        pointerEvents: comment._id ? 'initial' : 'none'\n                    }}>\n                        {\n                            comment.user && (\n                                <AvatarReply\n                                    user={comment.user}\n                                    user_reply={comment.reply_user}\n                                />\n                            )\n                        }\n                        \n                        <CommentsList\n                            comment={comment} \n                            showReply={showReply}\n                            setShowReply={setShowReply}\n                        />\n                    </div>\n                ))}\n\n                <div style={{ cursor: 'pointer' }}>\n                    {\n                        showReply.length - next > 0\n                            ? <small style={{ color: 'crimson' }}\n                                onClick={() => setNext(next + 5)}>\n                                See more comments...\n                            </small>\n                            : showReply.length > 2 &&\n                            <small style={{ color: 'teal' }}\n                                onClick={() => setNext(2)}>\n                                Hide comments...\n                            </small>\n                    }\n                </div>\n            </CommentsList>\n        </div>\n    );\n};\n\nexport default Comments;","import React, { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link, useLocation } from 'react-router-dom'\nimport { createComment, getComments } from '../../redux/actions/commentAction'\nimport { IBlog, IComment, IUser, RootStore } from '../../utils/TypeScript'\nimport Loading from '../alert/Loading'\nimport Comments from '../comments/comments'\nimport Input from '../comments/input'\nimport Pagination from '../global/Pagination'\n\ninterface IProps {\n  blog: IBlog\n}\n\nconst DisplayBlog: React.FC<IProps> = ({blog}) => {\n  const { auth, comments } = useSelector((state: RootStore) => state)\n  const dispatch = useDispatch()\n  const [loading, setLoading] = useState(false)\n  const location = useLocation()\n\n  const [showComments, setShowComments] = useState<IComment[]>([]) \n\n  const handleComment = (body: string) => {\n    if(!auth.user || !auth.access_token) return;\n\n    const data = {\n      content: body,\n      user: auth.user,\n      blog_id: (blog._id as string),\n      blog_user_id: (blog.user as IUser)._id,\n      replyCM: [],\n      createdAt: new Date().toISOString()\n    }\n    setShowComments([data, ...showComments])\n    dispatch(createComment(data, auth.access_token))\n  }\n\n  const fetchComments = useCallback(async (id: string, num = 1) => {\n    setLoading(true)\n    await dispatch(getComments(id, num))\n    setLoading(false)\n  }, [dispatch])\n\n  const handlePagination = (num: number) => {\n    if(!blog._id) return\n    fetchComments(blog._id, num)\n  }\n\n  useEffect(() => {\n    if(comments.data.length === 0) return\n    setShowComments(comments.data)\n  }, [comments.data])\n\n  useEffect(() => {\n    if(!blog._id) return\n    \n    const num = location.search.slice(6) || 1\n    fetchComments(blog._id, num )\n  }, [blog._id])\n\n  return (\n    <div>\n      <h2 className=\"text-center my-3 text-capitalize fs-1\"\n      style={{ color: '#ff7a00' }}>\n        {blog.title}\n      </h2>\n\n      <div className=\"text-end fst-italic\" style={{color: 'teal'}}>\n        <small>\n          {\n            typeof(blog.user) !== 'string' &&\n            `By: ${blog.user.name}`\n          }\n        </small>\n\n        <small className=\"ms-2\">\n          { new Date(blog.createdAt).toLocaleString() }\n        </small>\n      </div>\n\n      <div dangerouslySetInnerHTML={{\n        __html: blog.content\n      }} />\n\n      <hr />\n\n      <h3>Comment</h3>\n\n      {\n        auth.user ? <Input callback={handleComment} /> : (\n          <h3>Please <Link to={`/login?blog/${blog._id}`} >Login</Link>  to comment</h3>\n        )\n      }\n\n      {\n        loading ? <Loading /> :\n        showComments?.map((comment, index) => (\n          <Comments key={index} comment={comment} />\n        ))\n      }\n      {\n        comments.total > 1 && (\n          <Pagination \n            total={comments.total}\n            callback={handlePagination}\n          />\n        )\n      }\n      \n    </div>\n\n  \n  )\n}\n\nexport default DisplayBlog","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { showErrMsg } from '../../components/alert/Alert';\nimport DisplayBlog from '../../components/blog/DisplayBlog';\nimport Loading from '../../components/global/Loading';\nimport { getApi } from '../../utils/FetchData';\nimport { IParams, RootStore } from '../../utils/TypeScript';\n\nconst DetailBlog = () => {\n    const {slug: id}: IParams = useParams()\n\n    const [blog, setBlog] = useState()\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState('')\n    const { socket } = useSelector((state: RootStore) => state)\n\n    useEffect(() => {\n        if(!id) return \n        setLoading(true)\n\n        getApi(`blog/${id}`)\n        .then(res => {\n            setBlog(res.data)\n            setLoading(false)\n        })\n        .catch(err => {\n            setError(err.response.data.msg)\n            setLoading(false)\n        })\n\n        return () => setBlog(undefined)\n    }, [id])\n\n    // Join Room\n    useEffect(() => {\n        if(!id || !socket) return\n        socket.emit('joinRoom', id)\n\n        return () => {\n            socket.emit('outRoom', id)\n        }\n    }, [socket, id])\n\n    if(loading) return <Loading />\n    return (\n        <>\n            <div className='my-4'>\n                {error && showErrMsg(error)}\n\n                {blog && <DisplayBlog blog={blog} />}\n            </div>\n        </>\n    );\n};\n\nexport default DetailBlog;","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { getOtherInfo } from '../../redux/actions/profileAction'\nimport { RootStore, IUser } from '../../utils/TypeScript'\n\nimport Loading from '../global/Loading'\n\ninterface IProps {\n  id?: string\n}\n\nconst OtherInfo: React.FC<IProps> = ({id}) => {\n  const [other, setOther] = useState<IUser>()\n\n  const { otherInfo } = useSelector((state: RootStore) => state)\n  const dispatch = useDispatch()\n  console.log(otherInfo)\n\n  useEffect(() => {\n    if(!id) return;\n\n    if(otherInfo.every(user => user._id !== id)){\n      dispatch(getOtherInfo(id))\n    }else{\n      const newUser = otherInfo.find(user => user._id === id)\n      if(newUser) setOther(newUser)\n    }\n  },[id, otherInfo, dispatch])\n\n\n  if(!other) return <Loading />;\n  return (\n    <div className=\"profile_info text-center rounded\">\n      <div className=\"info_avatar\">\n        <img src={other.avatar} alt=\"avatar\" />\n      </div>\n\n      <h5 className=\"text-uppercase text-danger\">\n        {other.role}\n      </h5>\n\n      <div>\n        Name: <span className=\"text-info\">\n          {other.name}\n        </span>\n      </div>\n\n      <div>Email / Phone number</div>\n      <span className=\"text-info\">\n        {other.account}\n      </span>\n\n      <div>\n        Join Date: <span style={{color: '#ffc107'}}>\n          { new Date(other.createdAt).toLocaleString() }\n        </span>\n      </div>\n    </div>\n  )\n}\n\nexport default OtherInfo","import { Dispatch } from \"redux\";\nimport { checkTokenExp } from \"../../utils/checkTokenExp\";\nimport { getApi, patchAPI } from \"../../utils/FetchData\";\nimport { checkImg, imageUpload } from \"../../utils/ImgUpload\";\nimport { IUserProfile } from \"../../utils/TypeScript\";\nimport { checkPassword } from \"../../utils/Valid\";\nimport { ALERT, IAlertType } from \"../types/alertType\";\nimport { AUTH, IAuth, IAuthType } from \"../types/authType\";\nimport { GET_OTHER_INFO, IGetOtherInfoType } from \"../types/profileType\";\n\nexport const updateUser = (avatar: File, name: string, auth: IAuth) => \nasync(dispatch: Dispatch<IAlertType | IAuthType>) => {\n    if(!auth.access_token || !auth.user) return;\n    let url = ''\n    try {\n        const result = await checkTokenExp(auth.access_token, dispatch)\n        const access_token = result ? result : auth.access_token\n        dispatch({\n            type: ALERT,\n            payload: {\n                loading: true\n            }\n        })\n\n        if(avatar) {\n            const check = checkImg(avatar)\n            if(check) \n                return dispatch({\n                    type: ALERT,\n                    payload: {errors: check}\n                })\n\n            const photo = await imageUpload(avatar)\n            url = photo.url\n\n            dispatch({\n                type: AUTH,\n                payload: {\n                    access_token: access_token,\n                    user: {\n                        ...auth.user,\n                        avatar: url ? url : auth.user.avatar,\n                        name: name ? name: auth.user.name\n                    }\n                    \n                }\n            })\n\n            const res = await patchAPI('user', {\n                avatar: url ? url : auth.user.avatar,\n                name: name ? name: auth.user.name\n            }, access_token)\n            \n            dispatch({\n                type: ALERT,\n                payload: {success: res.data.msg}\n            })\n            \n        }\n\n        dispatch({\n            type: ALERT,\n            payload: {\n                loading: false\n            }\n        })\n    } catch (error: any) {\n        dispatch({\n            type: ALERT,\n            payload: {\n                errors: error.response.data.msg\n            }\n        })\n    }\n}\n\nexport const resetPassword = (\n    password: string, cf_password: string, token: string\n) => async(dispatch: Dispatch<IAlertType | IAuthType>) => {\n    const msg = checkPassword(password, cf_password)\n    if(msg) return dispatch({type: ALERT, payload: {errors: msg}})\n    try {\n        const result = await checkTokenExp(token, dispatch)\n        const access_token = result ? result : token\n        dispatch({\n            type: ALERT,\n            payload: {\n                loading: true\n            }\n        })\n        const res = await patchAPI('reset_password', {password}, access_token)\n\n        dispatch({\n            type: ALERT,\n            payload: {\n                loading: false,\n                success: 'succcc'\n            }\n        })\n    } catch (error: any) {\n        dispatch({\n            type: ALERT,\n            payload: {\n                errors: error.response.data.msg\n            }\n        })\n    }\n}\n\nexport const getOtherInfo = (id: string) => async (dispatch: Dispatch<IAlertType | IGetOtherInfoType>) => {\n    try {\n        dispatch({\n            type: ALERT,\n            payload: {\n                loading: true\n            }\n        })\n        const res = await getApi(`user/${id}`)\n        dispatch({\n            type: GET_OTHER_INFO,\n            payload: res.data\n        })\n\n        dispatch({\n            type: ALERT,\n            payload: {\n                loading: false,\n                success: 'succcc'\n            }\n        })\n    } catch (error) {\n        \n    }\n}","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport { getBlogsByUserId } from '../../redux/actions/blogAction';\nimport { IBlog, IParams, RootStore } from '../../utils/TypeScript';\nimport CardHoriz from '../cards/CardHoriz';\nimport CardVert from '../cards/CardVert';\nimport Loading from '../global/Loading';\nimport Pagination from '../global/Pagination';\n\nconst UserBlog = () => {\n    const params: any = useParams();\n    const dispatch = useDispatch()\n    const { blogsUser } = useSelector((state: RootStore) => state)\n    const [blogs, setBlogs] = useState<IBlog[]>()\n    const [total, setTotal] = useState(0)\n    const [searchParams] = useSearchParams()\n\n    useEffect(() => {\n        if(!params.slug) return;\n        const search = `?page=${searchParams.get('page')}`\n        // dispatch(getBlogsByUserId(params.slug))\n        if(blogsUser.every((item: any) => item.id !== params.slug)) {\n            dispatch(getBlogsByUserId(params.slug, search))\n        } else {\n            const data = blogsUser.find((item: any) => item.id === params.slug)\n            if(!data) return;\n            setBlogs(data.blogs)\n            setTotal(data.total)\n\n        }\n        console.log(blogs)\n    }, [params.slug, dispatch, blogs, params, blogsUser])\n\n    const handlePagination = (num: number) => {\n        const search = `?page=${num}`\n        dispatch(getBlogsByUserId(params.slug, search))\n    }\n\n    if(!blogs) return <Loading />\n\n    if(blogs.length === 0) return (\n        <h1>No blogs</h1>\n    )\n    return (\n        <div>\n            <div>\n                {\n                    blogs?.map((blog: any) => (\n                        <CardHoriz key={blog._id} blog={blog} />\n                    ))\n                }\n            </div>\n            <div>\n                {\n                    total > 1 && <Pagination total={total} callback={handlePagination} />\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default UserBlog;","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { resetPassword, updateUser } from '../../redux/actions/profileAction';\nimport { FormSubmit, InputChange, IUserProfile, RootStore } from '../../utils/TypeScript';\nimport NotFound from '../global/NotFound';\n\nconst UserInfo = () => {\n    const initialState = {name: '', account: '', avatar: '', password: '', cf_password: ''}\n    const {auth} = useSelector((state: RootStore) => state)\n    const dispatch = useDispatch();\n    const [user, setUser] = useState<IUserProfile>(initialState)\n    const [typePass, setTypePass] = useState(false)\n    const [typeCfPass, setTypeCfPass] = useState(false)\n    const {name, account, avatar, password, cf_password} = user\n\n    const handleChangeInput = (e: InputChange) => {\n        const {name, value} = e.target\n        setUser({...user, [name]: value})\n    }\n    \n    const handleChangeFile = (e: InputChange) => {\n        const target = e.target as HTMLInputElement\n        const files = target.files\n        console.log(files);\n        if(files) {\n            const file = files[0]\n            setUser({...user, avatar: file})\n        }\n    } \n\n    const handleSubmit = (e: FormSubmit) => {\n        e.preventDefault()\n        if(name || avatar) {\n            dispatch(updateUser((avatar as File), name, auth))     \n        }\n\n        if(password && auth.access_token) {\n            dispatch(resetPassword(password, cf_password, auth.access_token))\n        }\n    }\n        \n    if(!auth.user) return <NotFound />\n    return (\n        <form className='profile_info' onSubmit={handleSubmit}>\n            <div className=\"info_avatar\">\n                <img src={avatar ? URL.createObjectURL(avatar) : auth.user?.avatar} alt=\"\" />\n                <span>\n                    <p>change</p>\n                    <input \n                        type=\"file\" \n                        accept='image/*' \n                        name='file' \n                        id='file_up' \n                        onChange={handleChangeFile}\n                    />\n                </span>\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"account\">Name</label>\n                <input \n                    type=\"text\" \n                    className=\"form-control\" \n                    id=\"name\" \n                    name=\"name\" \n                    defaultValue={auth.user?.name} \n                    onChange={handleChangeInput}\n                />\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"account\">Account</label>\n                <input \n                    type=\"text\" \n                    className=\"form-control\" \n                    id=\"ccount\" \n                    name=\"account\" \n                    defaultValue={auth.user?.account} \n                    onChange={handleChangeInput}\n                    disabled={true}\n                />\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"account\">Password</label>\n                <input \n                    type={typePass ? \"text\": \"password\"} \n                    className=\"form-control\" \n                    id=\"password\" \n                    name=\"password\" \n                    value={password}\n                    onChange={handleChangeInput}\n                    disabled={auth.user.type !== 'register'}\n                />\n                <small onClick={() => setTypePass(!typePass)}>{typePass ? \"Show\" : \"hidden\"}</small>\n            </div>\n            {\n                auth.user.type !== 'register' && \n                <small className='text-danger'>\n                    * Quick login account with {auth.user.type} can't use this function\n                </small>\n            }\n            <div className=\"form-group\">\n                <label htmlFor=\"account\">Confirm Password</label>\n                <input \n                    type={typeCfPass ? \"text\": \"password\"} \n                    className=\"form-control\" \n                    id=\"cf_password\" \n                    name=\"cf_password\" \n                    value={cf_password}\n                    onChange={handleChangeInput}\n                    disabled={auth.user.type !== 'register'}\n                />\n                <small onClick={() => setTypePass(!typePass)}>{typePass ? \"Show\" : \"hidden\"}</small>\n            </div>\n\n            <button className='btn btn-info' type='submit'>Update</button>\n        </form>\n    );\n};\n\nexport default UserInfo;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport OtherInfo from '../../components/profile/OtherInfo';\nimport UserBlog from '../../components/profile/UserBlog';\nimport UserInfo from '../../components/profile/UserInfo';\nimport { IParams, RootStore } from '../../utils/TypeScript';\n\nconst Profile = () => {\n    const {slug}: IParams = useParams();\n    const { auth } = useSelector((state: RootStore) => state)\n\n        console.log({auth});\n        \n    return (\n        <div className='row my-3'>\n            <div className='col-md-5 mb-3'>\n                {\n                    auth.user?._id === slug ? <UserInfo /> : <OtherInfo id={slug} />\n                }\n            </div>\n            <div className=\"col-md-7\">\n                <UserBlog />\n            </div>\n        </div>\n    );\n};\n\nexport default Profile;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../../redux/actions/authAction';\nimport { FormSubmit, InputChange } from '../../utils/TypeScript';\n\nconst LoginPass = () => {\n    const initialState = {account: '', password: ''}\n    const [userLogin, setUserLogin] = useState(initialState)\n    const [typePass, setTypePass] = useState(false)\n    const {account, password} = userLogin\n    const dispatch = useDispatch()\n\n    const handleChangeInput = (e: InputChange ) => {\n        const {value, name} = e.target\n        setUserLogin({...userLogin, [name]: value})\n    }\n\n    const handleSubmit = (e: FormSubmit) => {\n        e.preventDefault()\n        dispatch(login(userLogin))\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <div className=\"form-group mb-3\">\n                <label htmlFor=\"account\">Email/Phone Number</label>\n                <input \n                    type=\"text\" \n                    className=\"form-control\" \n                    name=\"account\" \n                    id=\"account\" \n                    value={account}\n                    onChange={handleChangeInput}\n                />\n            </div>\n            <div className=\"form-group mb-3\">\n                <label htmlFor=\"account\" className=\"form-label\">Password</label>\n                <input \n                    type={typePass ? \"text\" : \"password\"} \n                    className=\"form-control\" \n                    name=\"password\" \n                    id=\"password\" \n                    value={password}\n                    onChange={handleChangeInput}\n                />\n                <small onClick={() => setTypePass(!typePass)}>{typePass ? 'Hide' : 'Show'}</small>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-dark w-100 mt-4\" disabled={(account && password) ? false : true}>Login</button>\n        </form>\n    );\n};\n\nexport default LoginPass;","import React, { useState } from 'react';\n\nconst LoginWithSMS = () => {\n    const [phone, setPhone] = useState('')\n    return (\n        <form >\n            <div className=\"form-group mb-2\">\n                <label className=\"form-label\">Phone</label>\n                <input \n                    type='text' \n                    className=\"form-control\" \n                    id=\"phone\" \n                    value={phone}\n                    onChange={(e) => setPhone(e.target.value)}\n                />\n                <button type=\"submit\" className=\"btn btn-dark w-100\" disabled={phone ? false:  true}>\n                    Login\n                </button>\n            </div>\n        </form>\n    );\n};\n\nexport default LoginWithSMS;","import React from 'react';\nimport { GoogleLogin, GoogleLoginResponse } from 'react-google-login-lite';\nimport { FacebookLogin, FacebookLoginAuthResponse } from 'react-facebook-login-lite';\nimport { useDispatch } from 'react-redux';\nimport { loginFacebook, loginGoogle } from '../../redux/actions/authAction';\n\nconst SocialLogin = () => {\n    const dispatch = useDispatch();\n    \n    const onSuccess = (googleUser: GoogleLoginResponse) => {\n        const idToken = googleUser.getAuthResponse().id_token\n        dispatch(loginGoogle(idToken))   \n    }\n    \n    const onFbSuccess = (response: FacebookLoginAuthResponse) => {\n        const { accessToken, userID } = response.authResponse;\n        console.log({ accessToken, userID } );\n        dispatch(loginFacebook(accessToken, userID))\n    }\n\n    return (\n        <div>\n             <GoogleLogin \n                client_id='988937493398-nv3qrlqvltn25vtoemu6saon9vl0lo3l.apps.googleusercontent.com'\n                cookiepolicy='single_host_origin'\n                onSuccess={onSuccess}\n                isSignedIn={false}\n            />\n            <FacebookLogin \n                appId=\"594614568307578\"\n                onSuccess={onFbSuccess}\n                isSignedIn={true}\n            />\n            \n        </div>\n    );\n};\n\nexport default SocialLogin;","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport LoginPass from '../components/auth/LoginPass';\nimport LoginWithSMS from '../components/auth/LoginWithSMS';\nimport SocialLogin from '../components/global/SocialLogin';\nimport { RootStore } from '../utils/TypeScript';\n\nconst Login = () => {\n    const [sms, setSms] = useState(false)\n    const navigate = useNavigate()\n    const { auth } = useSelector((state: RootStore) => state)\n    const location = useLocation()\n\n    console.log(auth);\n    useEffect(() => {\n        if(auth.access_token) {\n            let url = location.search.replace('?', '/')\n            if(url) return navigate(url)\n            navigate('/')\n        }\n    }, [auth.access_token])\n\n    return (\n        <div className=\"auth_page\">\n            <div className=\"auth_box\">\n                <h3 className=\"text-uppercase text-center mb-4\">Login</h3>\n\n                <SocialLogin />\n                {sms ? <LoginWithSMS /> : <LoginPass />}\n                <small className=\"row my-2 text-primary\" style={{cursor: 'pointer'}}>\n                    <Link to=\"/forgot_password\" className=\"col-6\">\n                        Forgot Password\n                    </Link> \n                </small>\n\n                <span className=\"col-6\" onClick={() => setSms(!sms)}>\n                    { sms ? 'Sign in with password' : 'Sign in with SMS' }\n                </span>\n                \n\n                <p>\n                    You don't have  an account ?\n                    <Link to={`/register`} style={{color: 'crimson'}}>\n                        Register now\n                    </Link>\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { IBlog, InputChange, RootStore } from '../../utils/TypeScript';\n\ninterface IProps {\n    blog: IBlog,\n    setBlog: (blog: IBlog) => void\n}\n\nconst CreateForm: React.FC<IProps> = ({blog, setBlog}) => {\n    const { categories } = useSelector((state: RootStore) => state)\n\n    const handleChangeInput = (e : InputChange) => {\n        const { name, value } = e.target\n        setBlog({...blog, [name]: value})\n    }\n\n    const handleChangeThumnail = (e: InputChange) => {\n        const target = e.target as HTMLInputElement\n        const files = target.files\n        if(files) {\n            const file = files[0]\n            setBlog({...blog, thumbnail: file})\n        }\n    }\n\n    return (\n        <form>\n            <div className=\"form-group position-relative\">\n                <input \n                    type=\"text\" \n                    className=\"form-control\"\n                    value={blog.title}\n                    name='title'\n                    onChange={handleChangeInput}\n                />\n\n                <small \n                    className=\"text-muted position-absolute\"\n                    style={{ bottom: 0, right: '3px', opacity: '0.3' }}\n                >\n                    {blog.title.length}/50\n                </small>\n            </div>\n\n            <div className=\"form-group my-3\">\n                <input \n                    type=\"file\" \n                    className=\"form-control\"\n                    accept=\"image/*\" \n                    onChange={handleChangeThumnail}\n                />\n            </div>\n\n            <div className=\"form-group position-relative\">\n                <textarea \n                    className=\"form-control\" \n                    rows={4}\n                    style={{ resize: 'none' }}\n                    name=\"description\" \n                    value={blog.description}\n                    onChange={handleChangeInput}\n                />\n\n                <small \n                    className=\"text-muted position-absolute\"\n                    style={{ bottom: 0, right: '3px', opacity: '0.3' }}>\n                    {blog.description.length}/200\n                </small>\n            </div>\n\n            <div className=\"form-group my-3\">\n                <select \n                    className=\"form-control text-capitalize\"\n                    name=\"category\"\n                    value={blog.category}\n                    onChange={handleChangeInput}\n                >\n                    <option value=\"\">Choose a category</option>\n                    {\n                        categories.map(category => (\n                            <option key={category._id} value={category._id}>\n                                {category.name}\n                            </option>\n                        ))\n                    }\n                </select>\n            </div>\n    </form>\n    );\n};\n\nexport default CreateForm;","import React, { useCallback, useEffect, useRef } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { useDispatch } from 'react-redux';\nimport { ALERT } from '../../redux/types/alertType';\nimport { checkImg, imageUpload } from '../../utils/ImgUpload';\n\ninterface IProps {\n    setBody: (value: string) => void\n}\n\nconst Quill: React.FC<IProps> = ({setBody}) => {\n    const modules: any = { toolbar: { container }}\n    const dispatch = useDispatch()\n    const quillRef = useRef<ReactQuill>(null)\n\n    const handleChange = (e: any) => {\n        setBody(e)\n    }\n\n    const handleChangeImage = useCallback(() => {\n        const input = document.createElement('input')\n        input.type = 'file';\n        input.accept = 'image/*'\n        input.click()\n\n        input.onchange = async () => {\n            const files = input.files\n            if(!files) return dispatch({\n                type: ALERT,\n                payload: {errors: 'File khong ton tai'}\n            })\n            const file = files[0]\n            const check = checkImg(file)\n            if(check) return dispatch({\n                type: ALERT,\n                payload: {errors: check}\n            })\n\n            const photo = await imageUpload(file)\n            const quill = quillRef.current;\n            const range = quill?.getEditor().getSelection()?.index\n            if(range !== undefined) {\n                quill?.getEditor().insertEmbed(range, 'image', `${photo.url}`)\n            }\n            dispatch({ type: ALERT, payload: { loading: false } })\n        }\n    }, [dispatch])\n\n    useEffect(() => {\n        const quill = quillRef.current\n        if(!quill) return\n\n        let toolbar = quill.getEditor().getModule('toolbar')\n        toolbar.addHandler('image', handleChangeImage)\n    }, [])\n    \n    return (\n        <div>\n             <ReactQuill \n                modules={modules}\n                theme=\"snow\"\n                onChange={handleChange}\n                ref={quillRef}\n            />\n        </div>\n    );\n};\n\nlet container = [\n    [{ 'font': [] }],\n    [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n    [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown\n  \n    ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\n    ['blockquote', 'code-block'],\n    [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme\n    [{ 'script': 'sub'}, { 'script': 'super' }],      // superscript/subscript\n  \n    [{ 'list': 'ordered'}, { 'list': 'bullet' }],\n    [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent\n    [{ 'direction': 'rtl' }],                         // text direction\n    [{ 'align': [] }],\n  \n    ['clean', 'link', 'image','video']\n  ]\n  \n  \n\nexport default Quill;","import React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CardHoriz from '../components/cards/CardHoriz';\nimport CreateForm from '../components/cards/CreateForm';\nimport ReactQuill from '../components/editors/ReactQuill';\nimport NotFound from '../components/global/NotFound';\nimport { createBlog } from '../redux/actions/blogAction';\nimport { ALERT } from '../redux/types/alertType';\nimport { imageUpload } from '../utils/ImgUpload';\nimport { IBlog, RootStore } from '../utils/TypeScript';\nimport { validCreateBlog } from '../utils/Valid';\n\nconst CreateBlog = () => {\n    const initialState = {\n        user: '',\n        title: '',\n        content: '',\n        description: '',\n        thumbnail: '',\n        category: '',\n        createdAt: new Date().toISOString()\n    }\n\n    const [blog, setBlog] = useState<IBlog>(initialState)\n    const dispath = useDispatch()\n    const { auth, categories } = useSelector((state: RootStore) => state)\n    const [body, setBody] = useState('')\n    const [text, setText] = useState('')\n    const divRef = useRef<HTMLDivElement>(null)\n\n    const handleSubmit = async () => {\n        if(!auth.access_token) return;\n        let url = ''\n\n        const check = validCreateBlog({...blog, content: text})\n        if(check.errLength !== 0) {\n            return dispath({type: ALERT, payload: {errors: check.errMsg}})\n        }\n\n        let newData = {...blog, content: body}\n        dispath(createBlog(newData, auth.access_token))\n        \n    }\n\n    useEffect(() => {\n        const div = divRef?.current;\n        if(!div) return\n        const text = (div?.innerText as string)\n        setText(text)\n    }, [body])\n\n    if(!auth.access_token) return <NotFound />\n    return (\n        <div className='row mt-4'>\n            <div className=\"col-md-6\">\n                <h5>Create</h5>\n                <CreateForm \n                    blog={blog}\n                    setBlog={setBlog}\n                />\n            </div>\n            <div className=\"col-md-6\">\n                <h5>Preview</h5>\n                <CardHoriz blog={blog} />\n            </div>\n\n            <ReactQuill setBody={setBody} />\n            <div ref={divRef} dangerouslySetInnerHTML={{\n                __html: body\n            }} style={{display: 'none'}} />\n            <small>{text.length}</small>\n            <button className=\"btn btn-dark mt-3 d-block mx-auto\"\n            onClick={handleSubmit}>\n                Create Post\n            </button>\n        </div>\n    );\n};\n\nexport default CreateBlog;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { login, register } from '../../redux/actions/authAction';\nimport { FormSubmit, InputChange } from '../../utils/TypeScript';\n\nconst RegisterForm = () => {\n    const initialState = {name: '', account: '', password: '', cf_password: ''}\n    const [userRegister, setUserRegister] = useState(initialState)\n    const {name, account, password, cf_password} = userRegister\n    const [typePass, setTypePass] = useState(false)\n    const [typeCfPass, setTypeCfPass] = useState(false)\n    const dispatch = useDispatch()\n\n    const handleChangeInput = (e: InputChange ) => {\n        const {value, name} = e.target\n        setUserRegister({...userRegister, [name]: value})\n    }\n\n    const handleSubmit = (e: FormSubmit) => {\n        e.preventDefault()\n        dispatch(register(userRegister))\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <div className=\"form-group mb-3\">\n                <label htmlFor=\"name\">Name</label>\n                <input \n                    type=\"text\" \n                    className=\"form-control\" \n                    name=\"name\" \n                    id=\"name\" \n                    value={name}\n                    onChange={handleChangeInput}\n                />\n            </div>\n            <div className=\"form-group mb-3\">\n                <label htmlFor=\"account\">Email/Phone number</label>\n                <input \n                    type=\"text\" \n                    className=\"form-control\" \n                    name=\"account\" \n                    id=\"account\" \n                    value={account}\n                    onChange={handleChangeInput}\n                />\n            </div>\n            <div className=\"form-group mb-3\">\n                <label htmlFor=\"password\" className=\"form-label\">Password</label>\n                <input \n                    type={typePass ? \"text\" : \"password\"} \n                    className=\"form-control\" \n                    name=\"password\" \n                    id=\"password\" \n                    value={password}\n                    onChange={handleChangeInput}\n                />\n                <small onClick={() => setTypePass(!typePass)}>{typePass ? 'Hide' : 'Show'}</small>\n            </div>\n            <div className=\"form-group mb-3\">\n                <label htmlFor=\"cf_password\" className=\"form-label\">Confirm Password</label>\n                <input \n                    type={typeCfPass ? \"text\" : \"password\"} \n                    className=\"form-control\" \n                    name=\"cf_password\" \n                    id=\"cf_password\" \n                    value={cf_password}\n                    onChange={handleChangeInput}\n                />\n                <small onClick={() => setTypeCfPass(!typeCfPass)}>{typeCfPass ? 'Hide' : 'Show'}</small>\n            </div>\n\n            <button \n                type=\"submit\" \n                className=\"btn btn-dark w-100 mt-1\" \n             >Register</button>\n        </form>\n    );\n};\n\nexport default RegisterForm;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport LoginPass from '../components/auth/LoginPass';\nimport LoginWithSMS from '../components/auth/LoginWithSMS';\nimport RegisterForm from '../components/auth/RegisterForm';\n\nconst Register = () => {\n    const [sms, setSms] = useState(false)\n\n    return (\n        <div className=\"auth_page\">\n            <div className=\"auth_box\">\n                <h3 className=\"text-uppercase text-center mb-4\">Register</h3>\n\n                <RegisterForm />\n                <p>\n                    You already have  an account ?\n                    <Link to={`/login`} style={{color: 'crimson'}}>\n                        Login now\n                    </Link>\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport default Register;","var map = {\n\t\"./\": 75,\n\t\"./active/[slug]\": 93,\n\t\"./active/[slug].tsx\": 93,\n\t\"./blog/[slug]\": 120,\n\t\"./blog/[slug].tsx\": 120,\n\t\"./blogs/[slug]\": 118,\n\t\"./blogs/[slug].tsx\": 118,\n\t\"./category\": 119,\n\t\"./category.tsx\": 119,\n\t\"./create_blog\": 123,\n\t\"./create_blog.tsx\": 123,\n\t\"./index\": 75,\n\t\"./index.tsx\": 75,\n\t\"./login\": 122,\n\t\"./login.tsx\": 122,\n\t\"./profile/[slug]\": 121,\n\t\"./profile/[slug].tsx\": 121,\n\t\"./register\": 124,\n\t\"./register.tsx\": 124\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 165;","import axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport { AUTH } from \"../redux/types/authType\";\nimport { getApi } from \"./FetchData\";\n\ninterface IToken {\n    exp: number\n    iat: number\n    id: string\n}\n\nexport const checkTokenExp = async (token: string, dispatch: any) => {\n    const decode: IToken = jwt_decode(token)\n    if(decode.exp > Date.now() / 1000) return\n\n    const res = await getApi('/refresh_token')\n    dispatch({\n        type: AUTH,\n        payload: res.data\n    })\n    return res.data.access_token\n}","import { ALERT, IAlertType } from './../types/alertType';\nimport { Dispatch } from \"redux\";\nimport { postApi, getApi } from \"../../utils/FetchData\";\nimport { IUserLogin, IUserRegister } from \"../../utils/TypeScript\";\nimport { AUTH, IAuthType } from \"../types/authType\";\nimport { validRegister } from '../../utils/Valid';\nimport { checkTokenExp } from '../../utils/checkTokenExp';\n\nexport const login = (userLogin: IUserLogin) => async (dispatch: Dispatch<IAuthType | IAlertType >) => {\n    try {\n        dispatch({\n            type: ALERT, \n            payload: {\n                loading: true\n            }\n        })\n        const res = await postApi('login', userLogin)\n        \n        dispatch({\n            type: 'AUTH',\n            payload: res.data\n        })\n\n        dispatch({\n            type: ALERT, \n            payload: {\n                loading: false,\n                success: \"Login thanh cong\"\n            }\n        })\n        localStorage.setItem('logged', 'true')\n    } catch (error: any) {\n        dispatch({\n            type: ALERT, \n            payload: {\n                errors: error.response.data.msg\n            }\n        })\n        console.log(error.response.data.msg);\n        \n    }\n}\n\nexport const loginGoogle = (id_token: string) =>async (dispatch: Dispatch<IAlertType | IAuthType>) => {\n    try {\n        dispatch({\n            type: ALERT,\n            payload: {loading: true}\n        })\n        const res = await postApi('google_login',{id_token})\n        dispatch({\n            type: AUTH,\n            payload: res.data\n        })\n        dispatch({\n            type: ALERT,\n            payload: {success: res.data.msg}\n        })\n        localStorage.setItem('logged', 'true')\n    } catch (error: any) {\n        dispatch({\n            type: ALERT,\n            payload: {errors: error.response.data.msg}\n        })\n    }\n}\n\nexport const loginFacebook = (accessToken: string, userID: string) => async (dispatch: Dispatch<IAuthType | IAlertType>) => {\n    try {\n        dispatch({\n            type: ALERT,\n            payload: {loading: true}\n        })\n        const res = await postApi('facebook_login', {accessToken, userID})\n        dispatch({\n            type: AUTH,\n            payload: res.data\n        })\n        dispatch({\n            type: ALERT,\n            payload: {success: res.data.msg}\n        })\n        localStorage.setItem('logged', 'true')\n        \n    } catch (error: any) {\n        dispatch({\n            type: ALERT,\n            payload: {errors: error.response.data.msg}\n        })\n    }\n}\n\nexport const logout = (token: string) => async (dispatch: Dispatch<IAuthType | IAlertType>) => {\n    const result = await checkTokenExp(token, dispatch)\n    const access_token = result ? result : token\n    localStorage.removeItem('logged')\n\n    await getApi('logout', access_token)\n    window.location.href = '/'\n} \n\nexport const register = (userRegister: IUserRegister) => async (dispatch: Dispatch<IAuthType | IAlertType>) => {\n    console.log(userRegister);\n    const check = validRegister(userRegister)\n    if(check.errLengh > 0) {\n        return dispatch({\n            type: ALERT,\n            payload: {\n                errors: check.errMSG\n            }\n        })\n    }\n\n    try {\n        dispatch({\n            type: ALERT,\n            payload: {\n                loading: true\n            }\n        })\n\n        const res = await postApi('register', userRegister)\n        console.log(res );\n        \n        dispatch({\n            type: ALERT,\n            payload: {\n                success: res.data.msg\n            }\n        })\n    } catch (error: any) {\n        dispatch({\n            type: ALERT, \n            payload: {\n                errors: error.response.data.msg\n            }\n        })\n        console.log(error.response.data.msg);\n    }\n}\n\nexport const refesh_token = () => async (dispatch: Dispatch<IAuthType | IAlertType>) => {\n    const logged = localStorage.getItem('logged')\n    console.log(\">>>>\",logged );\n    \n    if(logged !== 'true') return\n        try {\n            dispatch({type: ALERT, payload: {loading: true}})\n\n            const res = await getApi('refresh_token')\n            dispatch({ type: AUTH,payload: res.data })\n\n            dispatch({ type: ALERT, payload: { } })\n        } catch (error: any) {\n            dispatch({type: ALERT, payload: {loading: false}})\n            console.log(error.response);\n            \n        }\n}\n\n","import { IBlog } from \"../../utils/TypeScript\";\n\nexport const GET_HOME_BLOGS = \"GET_HOME_BLOGS\"\nexport const GET_BLOGS_CATEGORY_ID = \"GET_BLOGS_CATEGORY_ID\"\nexport const GET_BLOGS_USER_ID = \"GET_BLOGS_USER_ID\"\n\nexport interface IHomeBlogs {\n    _id: string,\n    name: string,\n    count: number,\n    blogs: any\n}\n\nexport interface IGetHomeBlogsType {\n    type: typeof GET_HOME_BLOGS,\n    payload: IHomeBlogs[]\n}\n\nexport interface IBlogsCategory {\n    id: string,\n    blogs: IBlog[],\n    total: number\n}\n\nexport interface IGetBlogsCategoryType {\n    type: typeof GET_BLOGS_CATEGORY_ID,\n    payload: IBlogsCategory\n}\n\nexport interface IBlogsUser {\n    id: string,\n    blogs: IBlog[],\n    total: number,\n    search: string\n}\n\nexport interface IGetBlogsUserType {\n    type: typeof GET_BLOGS_USER_ID,\n    payload: IBlogsUser\n}","import React from 'react'\n\nconst Footer = () => {\n  return (\n    <div className=\"text-center bg-light py-4\">\n      <h6>Welcome my chanel DevAT-VietNam</h6>\n      <a href=\"https://www.youtube.com/c/DevATHTML\" \n      target=\"_blank\" rel=\"noreferrer\"\n      className=\"mb-2 d-block\">\n        https://www.youtube.com/c/DevATHTML\n      </a>\n      <p> Copyright &copy; 2021</p>\n    </div>\n  )\n}\n\nexport default Footer","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link, useLocation } from 'react-router-dom'\nimport { logout } from '../../redux/actions/authAction'\nimport { RootStore } from '../../utils/TypeScript'\n\n\nconst Menu = () => {\n  const { auth } = useSelector((state: RootStore) => state)\n  const {pathname} = useLocation()\n  const dispatch = useDispatch()\n\n  const bfLoginLinks = [\n    { label: 'Login', path: '/login' },\n    { label: 'Register', path: '/register' }\n  ]\n\n  const afLoginLinks = [\n    { label: 'Home', path: '/'},\n    { label: 'CreateBlog', path: 'create_blog '},\n  ]\n\n  const navLinks = auth.access_token ? afLoginLinks : bfLoginLinks\n  const isActive = (pn: string) => {\n    if(pn === pathname) return 'active'\n  }\n\n  const handleLogout = () => {\n    if(!auth.access_token) return\n    dispatch(logout(auth.access_token))\n  }\n\n  return (\n    <ul className=\"navbar-nav ms-auto\">\n      {\n        navLinks.map((link, index) => (\n          <li key={index} className={`nav-item ${isActive(link.path)}`}>\n            <Link className=\"nav-link\" to={link.path}>{link.label}</Link>\n          </li>\n        ))\n      }\n      {\n        auth.user?.role === 'admin' && (\n          <li className={`nav-item ${isActive('/category')}`}>\n            <Link to={'/category'} className='nav-link'>Category</Link>\n          </li>\n        )\n      }\n      {\n        auth.user && (\n          <li className=\"nav-item dropdown\">\n            <span className=\"nav-link dropdown-toggle\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n              {auth.user.account}\n              <img src={auth.user.avatar} className='avatar' />\n            </span>\n\n            <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n              <li><Link className=\"dropdown-item\" to={`/profile/${auth.user._id}`}>Profile</Link></li>\n              <li><hr className=\"dropdown-divider\" /></li>\n              <li><Link className=\"dropdown-item\" to=\"/\" onClick={handleLogout}>Logout</Link></li>\n            </ul>\n          </li>\n        )\n      }\n\n    </ul>\n  )\n}\n\nexport default Menu","import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getApi } from '../../utils/FetchData';\nimport { IBlog } from '../../utils/TypeScript';\nimport CardHoriz from '../cards/CardHoriz';\n\nconst Search = () => {\n    const [search, setSearch] = useState('')\n    const [blogs, setBlogs] = useState<IBlog[]>([])\n    const { pathname } = useLocation()\n\n    useEffect(() => {\n        const delayDebounce = setTimeout(async () => {\n            if(search.length < 2) return setBlogs([]);\n\n            try {\n                const res = await getApi(`search/blogs?title=${search}`)\n                setBlogs(res.data)\n            } catch (error) {\n                console.log(error)\n            }\n        }, 400)\n\n       return () => clearTimeout(delayDebounce)\n\n    } ,[search])\n\n    useEffect(() => {\n        setSearch('')\n        setBlogs([])\n    }, [pathname])\n\n    return (\n        <div className=\"search w-100 position-relative me-4\">\n            <input type=\"text\" className=\"form-control me-2 w-100\"\n                value={search} placeholder=\"Enter your search...\"\n                onChange={e => setSearch(e.target.value)} />\n\n            {\n                search.length >= 2 &&\n                <div className=\"position-absolute pt-2 px-1 w-100 rounded\"\n                    style={{\n                        background: '#eee', zIndex: 10,\n                        maxHeight: 'calc(100vh - 100px)',\n                        overflow: 'auto'\n                    }}>\n                    {\n                        blogs.length\n                            ? blogs.map(blog => (\n                                <CardHoriz key={blog._id} blog={blog} />\n                            ))\n                            : <h3 className=\"text-center\">No Blogs</h3>\n                    }\n                </div>\n            }\n        </div>\n    );\n};\n\nexport default Search;","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport Menu from './Menu';\nimport Search from './Search';\n\nconst Header = () => {\n    const {pathname} = useLocation()\n\n    const isActive = (pn: string) => {\n      if(pn === pathname) return 'active'\n    }\n\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light p-3\">\n        <Link className=\"navbar-brand\" to=\"/\">BlogDev</Link>\n\n        <button \n          className=\"navbar-toggler\" \n          type=\"button\" \n          data-bs-toggle=\"collapse\" \n          data-bs-target=\"#navbarNav\" \n          aria-controls=\"navbarNav\" \n          aria-expanded=\"false\" \n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <Search />\n          <Menu />\n        </div>\n    </nav>\n    );\n};\n\nexport default Header;","import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport { IParams } from './utils/TypeScript'\nimport NotFound from './components/global/NotFound'\n\n\nconst generatePage = (name: string) => {\n  const component = () => require(`./pages/${name}`).default\n\n  try {\n    return React.createElement(component())\n  } catch (err) {\n    return <NotFound />;\n  }\n}\n\nconst PageRender = () => {\n  const params: IParams = useParams()\n\n  let name = '';\n\n  if(params.page){\n    name = params.slug ? `${params.page}/[slug]` : `${params.page}`\n  }\n\n  return generatePage(name)\n}\n\nexport default PageRender","import { Socket } from \"socket.io-client\"\n\nexport const SOCKET = \"SOCKET\"\n\nexport interface ISocketType {\n    type: typeof SOCKET,\n    payload: Socket\n}","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CREATE_COMMENT, REPLY_COMMENT } from './redux/types/commentType';\nimport { IComment, RootStore } from './utils/TypeScript';\n\nconst SocketClient = () => {\n    const { socket } = useSelector((state: RootStore) => state)\n    const dispatch = useDispatch()\n\n\n    useEffect(() => {\n        if(!socket) return\n\n        socket.on('createComment', (data: IComment) => {\n            dispatch({\n                type: CREATE_COMMENT,\n                payload: data\n            })\n        })\n    \n        return () => {  socket.off('createComment') }\n    }, [socket, dispatch])\n\n    useEffect(() => {\n        if(!socket) return\n\n        socket.on('replyComment', (data: IComment) => {\n            dispatch({\n                type: REPLY_COMMENT,\n                payload: data\n            })\n        })\n    \n        return () => {  socket.off('replyComment') }\n    }, [socket, dispatch])\n\n    return (\n        <div>\n            \n        </div>\n    );\n};\n\nexport default SocketClient;","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport {Alert} from './components/alert/Alert';\nimport Footer from './components/global/Footer';\nimport Header from './components/global/Header';\nimport PageRender from './PageRender';\nimport { refesh_token } from './redux/actions/authAction';\nimport { getHomeBlogs } from './redux/actions/blogAction';\nimport { getCategory } from './redux/actions/categoryAction';\nimport io from \"socket.io-client\"\nimport { SOCKET } from './redux/types/socketType';\nimport SocketClient from './SocketClient';\n\nfunction App() {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(refesh_token())\n    dispatch(getCategory())\n    dispatch(getHomeBlogs())\n\n  }, [dispatch])\n\n  useEffect(() => {\n    const socket = io()\n    dispatch({\n      type: SOCKET,\n      payload: socket\n    })\n    return () => { socket.close() }\n  }, [])\n    \n  function die(){\n    document.write('end')\n  } \n  return (\n    <div className=\"container\">\n      <SocketClient />\n      <Router>\n        <Alert />\n      <Header/> \n        <Routes>\n          <Route path=\"/\" caseSensitive={false} element={<PageRender />} />\n          <Route path=\"/:page\" caseSensitive={false} element={<PageRender />} />\n          <Route path=\"/:page/:slug\" caseSensitive={false} element={<PageRender />} />\n        </Routes>\n        <Footer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { IAuthType, IAuth, AUTH } from './../types/authType';\n\nconst authReducer = (state: IAuth = {}, action: IAuthType): IAuth => {\n    switch(action.type) {\n        case AUTH:\n            return action.payload\n        \n        default: \n            return state\n    }\n}\n\nexport default authReducer","import { IAlert } from './../../utils/TypeScript';\nimport { ALERT } from './../types/alertType';\n \nconst alertReducer = (state: IAlert = {}, action: any): IAlert => {\n    switch(action.type) {\n        case ALERT:\n            return action.payload\n        \n        default: \n            return state\n    }\n}\n\nexport default alertReducer","import * as types from './../types/categoryType';\nimport { ICategory } from \"../../utils/TypeScript\";\n\nconst categoryReducer = (state: ICategory[] = [], action: types.ICategoryType): ICategory[] => {\n    switch(action.type) {\n        case types.CREATE_CATEGORY:\n            return [action.payload, ...state]\n\n        case types.GET_CATEGORIES:\n            return action.payload\n        \n        case types.UPDATE_CATEGORY:\n            return state.map(item => (\n                item._id === action.payload._id ? {...item, name: action.payload.name}: item\n            ))\n        case types.DELETE_CATEGORY: \n                return state.filter(item => item._id !== action.payload)\n        default:\n            return state;\n    }\n}\n\nexport default categoryReducer;","import { GET_HOME_BLOGS, IGetHomeBlogsType, IHomeBlogs } from \"../types/blogType\";\n\nconst homeBlogsReducer = (state: any[] = [], action: IGetHomeBlogsType): any => {\n    switch (action.type) {\n        case GET_HOME_BLOGS:\n            return action.payload\n        default:\n            return state;\n    }\n}\n\nexport default homeBlogsReducer","import { GET_BLOGS_CATEGORY_ID, IBlogsCategory, IGetBlogsCategoryType } from \"../types/blogType\";\n\nconst blogsCategoryReducer = (\n    state: IBlogsCategory[] = [], \n    action: IGetBlogsCategoryType\n): IBlogsCategory[] => {\n    switch (action.type) {\n        case GET_BLOGS_CATEGORY_ID:\n            if(state.every(item => item.id !== action.payload.id)) {\n                return [...state, action.payload]\n            } else {\n                return state.map(blog => (\n                    blog.id === action.payload.id ? action.payload: blog\n                ))\n            }\n        default:\n            return state;\n    }\n}\n\nexport default blogsCategoryReducer;","import { IUser } from \"../../utils/TypeScript\";\nimport { GET_OTHER_INFO, IGetOtherInfoType } from \"../types/profileType\";\n\nconst otherInfoReducer = (\n    state: IUser[] = [],\n    action: IGetOtherInfoType\n) => {\n    switch (action.type) {\n        case GET_OTHER_INFO:\n            console.log(action.payload)\n            return [...state, action.payload]\n    \n        default:\n            return state;\n    }\n}\n\nexport default otherInfoReducer","import { GET_BLOGS_CATEGORY_ID, GET_BLOGS_USER_ID, IBlogsCategory, IBlogsUser, IGetBlogsCategoryType, IGetBlogsUserType } from \"../types/blogType\";\n\nconst userBlogsReducer = (\n    state: IBlogsUser[] = [], \n    action: IGetBlogsUserType\n): any => {\n    switch (action.type) {\n        case GET_BLOGS_USER_ID:\n            if(state.every(item => item.id !== action.payload.id)) {\n                return [...state, action.payload]\n            } else {\n                return state.map(blog => (\n                    blog.id === action.payload.id ? action.payload: blog\n                ))\n            }\n        default:\n            return state;\n    }\n}\n\nexport default userBlogsReducer;","import { CREATE_COMMENT, GET_COMMENT, ICommentState, ICommentType, REPLY_COMMENT } from \"../types/commentType\"\n\nconst initialState = {\n    data: [],\n    total: 1\n}\n\nconst commentReducer = (\n    state: ICommentState = initialState,\n    action: ICommentType\n): ICommentState => {\n    switch (action.type) {\n        case CREATE_COMMENT:\n            return {\n                ...state,\n                data: [action.payload, ...state.data]\n            }\n        case GET_COMMENT:\n            return action.payload\n\n        case REPLY_COMMENT:\n            return {\n                ...state,\n                data: state.data.map(item => (\n                    item._id === action.payload.comment_root \n                    ? {\n                        ...item,\n                        replyCM: [\n                            ...item.replyCM as [],\n                            action.payload\n                        ]\n                    } : item\n                ))\n            }\n    \n        default:\n            return state;\n    }\n}\n\nexport default commentReducer;","import { ISocketType, SOCKET } from \"../types/socketType\";\n\nconst socketReducer = (state: any = null, action: ISocketType) => {\n    switch (action.type) {\n        case SOCKET:\n            return action.payload\n        default:\n            return state;\n    }\n}\n\nexport default socketReducer     ","import { combineReducers } from \"redux\";\nimport auth from './authReducer'\nimport alert from './alertReducer'\nimport categories from './categoryReducer'\nimport homeBlogs from './homeBLogsReducer'\nimport blogsCategory from './blogsCategoryReducer'\nimport otherInfo from './otherInfoReducer'\nimport blogsUser from './userBlogsReducer'\nimport comments from './commentReducer'\nimport socket from './socketReducer'\n\nexport default combineReducers({\n    auth,\n    alert,\n    categories,\n    homeBlogs,\n    blogsCategory,\n    otherInfo,\n    blogsUser,\n    comments,\n    socket\n})","import { applyMiddleware, compose, createStore } from \"redux\";\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport rootReducers from \"./reducers\"\nimport thunk from \"redux-thunk\"\ndeclare global {\n    interface Window {\n      __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n    }\n}\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    rootReducers,\n    composeEnhancers(applyMiddleware(thunk))\n)\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n \nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import React from 'react';\n\nconst NotFound = () => {\n    return (\n        <div className=\"position-relative\" style={{minHeight: 'calc(100vh - 70px)'}}>\n            <h2 className=\"position-absolute\"\n                style={{top: '50%', left: '50%', transform: 'translate(-50%, -50%)'}}\n            >404 / Not Found</h2>\n        </div>\n    );\n};\n\nexport default NotFound;","import { IAlert, IUser } from './../../utils/TypeScript';\nexport const ALERT = 'ALERT'\n\nexport interface IAlertType {\n    type: typeof ALERT\n    payload: IAlert\n}","import { IUser } from './../../utils/TypeScript';\nexport const AUTH = 'AUTH'\n\nexport interface IAuth {\n    msg?: string,\n    access_token?: string,\n    user?: IUser\n}\n\nexport interface IAuthType {\n    type: typeof AUTH\n    payload: IAuth\n}","import { GET_BLOGS_CATEGORY_ID, GET_BLOGS_USER_ID, IGetBlogsUserType } from './../types/blogType';\nimport { IAlertType, ALERT} from './../types/alertType';\nimport { Dispatch } from \"react\";\nimport { IBlog } from \"../../utils/TypeScript\";\nimport { imageUpload } from '../../utils/ImgUpload';\nimport { getApi, postApi } from '../../utils/FetchData';\nimport { GET_HOME_BLOGS, IGetHomeBlogsType, IGetBlogsCategoryType    } from '../types/blogType';\nimport { checkTokenExp } from '../../utils/checkTokenExp';\n\nexport const createBlog = (blog: IBlog, token: string) =>async (dispatch: Dispatch<IAlertType>) => {\n    let url\n    try {\n        const result = await checkTokenExp(token, dispatch)\n        const access_token = result ? result : token\n        dispatch({ type: ALERT, payload: {loading: true}})\n\n        if(typeof (blog.thumbnail) !== 'string') {\n            const photo = await imageUpload(blog.thumbnail)\n            url = photo.url\n        } else {\n            url = blog.thumbnail\n        }\n        \n        const newBlog = {...blog, thumbnail: url}\n        const res = await postApi('/blog', newBlog, access_token)\n\n        dispatch({ type: ALERT, payload: {loading: false}})\n    } catch (error: any) {\n        dispatch({type: ALERT, payload: {errors: error.response.data.msg, loading: false}})\n    }   \n}\n\nexport const getHomeBlogs = () =>async (dispatch: Dispatch<IAlertType | IGetHomeBlogsType>) => {\n    try {\n        dispatch({ type: ALERT, payload: {loading: true}})\n        const res = await getApi('home/blogs')\n        dispatch({\n            type: GET_HOME_BLOGS,\n            payload: res.data\n        })\n        \n        dispatch({ type: ALERT, payload: {loading: false}})\n    } catch (error: any) {\n        dispatch({type: ALERT, payload: {errors: error.response.data.msg, loading: false}})\n    }   \n}\n\nexport const getBlogsByCategoryId = (id: string, param: any) =>async (dispatch: Dispatch<IAlertType | IGetBlogsCategoryType>) => {\n    try {\n        let limit = 4\n        dispatch({ type: ALERT, payload: {loading: true}})\n        const res = await getApi(`blogs/category/${id}?page=${param}&limit=${limit}`)\n        dispatch({\n            type: GET_BLOGS_CATEGORY_ID,\n            payload: {\n                ...res.data,\n                id\n            }\n        })\n       \n        dispatch({ type: ALERT, payload: {loading: false}})\n    } catch (error: any) {\n        dispatch({type: ALERT, payload: {errors: error.response.data.msg, loading: false}})\n    }   \n}\n\nexport const getBlogsByUserId = (id: string, search: string) =>async (dispatch: Dispatch<IAlertType | IGetBlogsUserType>) => {\n    try {\n        let limit = 3\n        let value = search ? search : `?page=${1}`; \n        dispatch({ type: ALERT, payload: {loading: true}})\n        const res = await getApi(`blogs/user/${id}${value}&limit=${limit}`)\n        \n        dispatch({\n            type: GET_BLOGS_USER_ID,\n            payload: {\n                ...res.data,\n                id\n            }\n        })\n       \n        dispatch({ type: ALERT, payload: {loading: false}})\n    } catch (error: any) {\n        dispatch({type: ALERT, payload: {errors: error.response.data.msg, loading: false}})\n    }   \n}\n\n\n","import { ICategory } from \"../../utils/TypeScript\";\n\nexport const CREATE_CATEGORY = 'CREATE_CATEGORY'\nexport const GET_CATEGORIES = 'GET_CATEGORIES'\nexport const UPDATE_CATEGORY = 'UPDATE_CATEGORY'\nexport const DELETE_CATEGORY = 'DELETE_CATEGORY'\n\nexport interface ICreateCategory{\n    type: typeof CREATE_CATEGORY\n    payload: ICategory\n}\n\nexport interface IGetCategories {\n    type: typeof GET_CATEGORIES,\n    payload: ICategory[]\n}\n\nexport interface IUpdateCategories {\n    type: typeof UPDATE_CATEGORY,\n    payload: ICategory\n}\n\nexport interface IDeleteCategory {\n    type: typeof DELETE_CATEGORY,\n    payload: string\n}\n\nexport type ICategoryType = ICreateCategory | IGetCategories | IUpdateCategories | IDeleteCategory","import { IComment } from \"../../utils/TypeScript\";\n\nexport const CREATE_COMMENT = 'CREATE_COMMENT'\nexport const GET_COMMENT = 'GET_COMMENT'\nexport const REPLY_COMMENT = 'REPLY_COMMENT'\n\nexport interface ICommentState {\n    data: IComment[],\n    total: number\n}\n\nexport interface ICreateCommentType {\n    type: typeof CREATE_COMMENT,\n    payload: IComment\n}\n\nexport interface IGetCommentType {\n    type: typeof GET_COMMENT,\n    payload: ICommentState\n}\n\nexport interface IReplyCommentType {\n    type: typeof REPLY_COMMENT,\n    payload: IComment\n}\n\nexport type ICommentType = | ICreateCommentType | IGetCommentType | IReplyCommentType","export const checkImg = (file: File) => {\n    const types = ['image/png', 'image/jpeg']\n    let err = ''\n    if(!file) return err = 'File không tồn tại'\n\n    if(file.size > 1024 * 1024) //1mb\n        err = \"The largest image size is 1mb\"\n    if(!types.includes(file.type))\n        err = \"The image format incorrect\"\n        return err\n}\n\nexport const imageUpload = async (file: File) => {\n    const formData = new FormData()\n    formData.append(\"file\", file)\n    formData.append(\"upload_preset\", \"fx3wlpvw\")\n    formData.append(\"cloud_name\", \"dmq1ovnkw\")\n\n    const res = await fetch(\"https://api.cloudinary.com/v1_1/dmq1ovnkw/upload\", {\n        method: \"POST\",\n        body: formData\n    })\n\n    const data = await res.json()\n    return {public_id: data.public_id, url: data.secure_url}\n}","import { useDispatch } from 'react-redux'\nimport { ALERT } from '../../redux/types/alertType'\n\ninterface IProps {\n  title: string\n  body: string | string[]\n  bgColor: string\n}\n\nconst Toast = ({title, body, bgColor}: IProps) => {\n\n  const dispatch = useDispatch()\n\n  const handleClose = () => {\n    dispatch({ type: ALERT, payload: {} })\n  }\n\n  return (\n    <div className={`toast show position-fixed text-light ${bgColor}`}\n    style={{top: '5px', right: '5px', zIndex: 50, minWidth: '200px'}}>\n\n      <div className={`toast-header text-light ${bgColor}`}>\n        <strong className=\"me-auto\">{title}</strong>\n        <button type=\"button\" className=\"btn-close\" \n        data-bs-dismiss=\"toast\" aria-label=\"Close\"\n        onClick={handleClose} />\n      </div>\n\n      <div className=\"toast-body\">\n        {\n          typeof(body) === 'string'\n          ? body\n          : <ul>\n            {\n              body.map((text, index) => (\n                <li key={index}>{text}</li>\n              ))\n            }\n          </ul>\n        }\n      </div>\n\n    </div>\n  )\n}\n\nexport default Toast","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Loading from './Loading';\nimport { RootStore } from './../../utils/TypeScript'\nimport Toast from './Toast';\n\nexport const Alert = () => {\n    const {alert} = useSelector((state: RootStore) => state)\n\n    return (\n        <div>\n            {alert.loading && <Loading /> }\n            {\n                alert.errors && \n                <Toast\n                    title=\"Erros\"\n                    body={alert?.errors}\n                    bgColor=\"bg-danger\"\n                />\n            }\n            {\n                alert.success && \n                <Toast\n                    title=\"Success\"\n                    body={alert?.success}\n                    bgColor=\"bg-success\"\n                />\n            }\n            \n        </div>\n    );\n};\n\nexport const showErrMsg = (msg: string) => {\n    return <div className='errMsg'>{msg}</div>\n}\n\nexport const showSuccessMsg = (msg: string) => {\n    return <div className='successMsg'>{msg}</div>\n}","import React from 'react';\n\nconst Loading = () => {\n    return (\n        <div className=\"position-fixed w-100 h-100 text-center loading\"\n            style={{ background: '#0007', color: \"white\", top: 0, left: 0, zIndex: 99 }}>\n            <svg width=\"205\" height=\"250\" viewBox=\"0 0 40 50\">\n                <polygon stroke=\"#fff\" strokeWidth=\"1\" fill=\"none\"\n                    points=\"20,1 40,40 1,40\" />\n                <text fill=\"#fff\" x=\"5\" y=\"47\">Loading</text>\n            </svg>\n        </div>\n    );\n};\n\nexport default Loading;","import { IBlog, IUserRegister } from \"./TypeScript\";\n\nexport const validRegister = (data: IUserRegister) => {\n    const { name, password, account, cf_password } = data\n\n    const errors: string[] = [];\n\n    if (!name) {\n        errors.push(\"Bạn chưa nhập tên\")\n    } else if (name.length > 20) {\n        errors.push(\"Tên không được lớn hơn 20 ký tự\")\n    }\n\n    if (!account) {\n        errors.push(\"Vui lòng nhập tên hoặc số điện thoại \")\n    } else if (!validatePhone(account) && !validateEmail(account)) {\n        errors.push(\"Email hoặc số điện thoại không hợp lệ\")\n    }\n\n    if (password.length < 6) {\n        errors.push(\"Mật khẩu không được ít hơn 6 ký tự\")\n    } else if (password !== cf_password) {\n        errors.push(\"Mật khẩu did not match\")\n    }\n\n    const msg = checkPassword(password, cf_password)\n    if (msg) errors.push(msg)\n\n    return {\n        errMSG: errors,\n        errLengh: errors.length\n    }\n}\n\nexport const checkPassword = (password: string, cf_password: string) => {\n    if (password.length < 6) {\n        return (\"Password phai lon hon 6 ky tu\")\n    } else if (password !== cf_password) {\n        return (\"Confirm password did not match\")\n    }\n}\n\nexport function validatePhone(phone: string) {\n    return phone\n}\n\nexport function validateEmail(email: string) {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\n\n// Valid Blog\nexport const validCreateBlog = ({\n    title, content, description, thumbnail, category\n}: IBlog) => {\n    const err: string[] = []\n\n    if(title.trim().length < 10) {\n        err.push(\"Title phai lon hon 10 ky tu\")\n    } else if (title.trim().length > 50) {\n        err.push('Title qua dai')\n    }\n\n    if(content.trim().length < 2000) {\n        err.push('Noi dung phai nho hon 2000 ky tu')\n    }\n\n    if(description.trim().length < 50) {\n        err.push('Description has at least 50 characters')\n    } else if (description.trim().length > 200) {\n        err.push('Description is up to 200 characters long')\n    }\n\n    if(!thumbnail) {\n        err.push('Thumnail cannot left blank')\n    }\n\n    if(!category) {\n        err.push('Category cannot left blank')\n    }\n\n    return {\n        errMsg: err,\n        errLength: err.length\n    }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { IBlog } from '../../utils/TypeScript';\n\ninterface IProps {\n    blog: IBlog\n}\n\nconst CardHoriz: React.FC<IProps> = ({blog}) => {\n    return (\n        <div className=\"card mb-3\" style={{minWidth: \"280px\"}}>\n        <div className=\"row g-0 p-2\">\n          <div className=\"col-md-4\" style={{\n            minHeight: '150px', maxHeight: '170px', overflow: 'hidden'\n          }}>\n            {\n              blog.thumbnail && \n              <>\n                {\n                  typeof(blog.thumbnail) === 'string'\n                  ? <Link to={`/blog/${blog._id}`}>\n                      <img src={blog.thumbnail} \n                      className=\"w-100 h-100\" \n                      alt=\"thumbnail\" style={{objectFit: 'cover'}} />\n                  </Link>\n                  :<img src={URL.createObjectURL(blog.thumbnail)} \n                  className=\"w-100 h-100\" \n                  alt=\"thumbnail\" style={{objectFit: 'cover'}} />\n                }\n              </>\n            }\n            \n          </div>\n          \n          <div className=\"col-md-8\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{blog.title}</h5>\n              <p className=\"card-text\">{blog.description}</p>\n              <p className=\"card-text\">\n                <small className=\"text-muted\">\n                  {new Date(blog.createdAt).toLocaleString()}\n                </small>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n};\n\nexport default CardHoriz;","import React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams, useSearchParams } from 'react-router-dom';\n\ninterface Iprops {\n    total: number,\n    callback: (num: number) =>  void\n}\n\nconst Pagination: React.FC<Iprops> = ({ total, callback }) => {\n    const [page, setPage] = useState(1)\n    const newArr = [...Array(total)].map((_, i) => i + 1)\n    const navigate = useNavigate()\n    \n  const [searchParams] = useSearchParams();\n    \n    const isActive = (index: number) => {\n        if(index === page) return \"active\"\n        return \"\"\n    }\n\n    const handlePagination = (num: number) => {\n        navigate(`?page=${num}`)\n        setPage(num)\n        callback(num)\n    }\n\n    useEffect(() => {\n        const num = searchParams.get('page')\n    },[])\n\n    return (\n        <div>\n            total page: {total}\n\n            <nav aria-label=\"Page navigation example\">\n                <ul className=\"pagination\">\n                    \n                    {\n                        page > 1 && \n                            <li className=\"page-item\" onClick={() => handlePagination(page - 1)}>\n                                <a className=\"page-link\" href=\"#\" aria-label=\"Previous\">\n                                    <span aria-hidden=\"true\">&laquo;</span>\n                                    <span className=\"sr-only\">Previous</span>\n                                </a>\n                            </li>\n                    }\n                    {\n                        newArr.map(num => (\n                            <li \n                                className={`page-item ${isActive(num)}`}\n                                onClick={() => handlePagination(num)}\n                            >\n                                <a className=\"page-link\" href=\"#\">{num}</a>\n                            </li>\n                        ))\n                    }\n                    {\n                        page < total &&\n                            <li className=\"page-item\" onClick={() => handlePagination(page + 1)}>\n                                <a className=\"page-link\" href=\"#\" aria-label=\"Next\">\n                                    <span aria-hidden=\"true\">&raquo;</span>\n                                    <span className=\"sr-only\">Next</span>\n                                </a>\n                            </li>\n\n                    }\n                </ul>\n            </nav>\n        </div>\n    );\n};\n\nexport default Pagination;","import React from 'react';\n\nconst Loading = () => {\n    return (\n        <div>\n            <div className=\"spinner-border text-primary\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n            </div>\n        </div>\n    );\n};\n\nexport default Loading;","import { ICategory } from './../../utils/TypeScript';\nimport { \n    GET_CATEGORIES, \n    ICategoryType, \n    UPDATE_CATEGORY, \n    CREATE_CATEGORY,\n    DELETE_CATEGORY\n} \nfrom './../types/categoryType';\nimport { Dispatch } from 'redux';\nimport { deleteAPI, getApi, patchAPI, postApi } from '../../utils/FetchData';\nimport { ALERT, IAlertType } from './../types/alertType';\nimport { checkTokenExp } from '../../utils/checkTokenExp';\n\nexport const createCategory = (\n    name: string, token: string\n) => async(dispatch: Dispatch<IAlertType | ICategoryType>) => {\n    try {\n        const result = await checkTokenExp(token, dispatch)\n        const access_token = result ? result : token\n        dispatch({type: ALERT, payload: {loading: true}})\n\n        const res = await postApi('category', {name}, access_token)\n        \n        dispatch({\n            type: CREATE_CATEGORY,\n            payload: res.data.newCategory\n        })\n        dispatch({type: ALERT, payload: {loading: false}})\n        \n    } catch (error: any) {\n        dispatch({type: ALERT, payload: {\n            errors: error.response.data.msg\n        }})\n    }\n}\n\nexport const getCategory = () => async(dispatch: Dispatch<IAlertType |  ICategoryType>) => {\n    try {\n        dispatch({type: ALERT, payload: {loading: true}})\n        const res = await getApi('category')\n\n        dispatch({\n            type: GET_CATEGORIES,\n            payload: res.data.categories\n        })\n        dispatch({type: ALERT, payload: {loading: false}})\n        \n    } catch (error: any) {\n        dispatch({type: ALERT, payload: {\n            errors: error.response?.data?.msg\n        }})\n    }\n}\n\nexport const updateCategory = (data: ICategory, token: string) => async(dispatch: Dispatch<ICategoryType | IAlertType>) => {\n    const result = await checkTokenExp(token, dispatch)\n    const access_token = result ? result : token\n    \n    try {\n        dispatch({\n            type: UPDATE_CATEGORY,\n            payload: data\n        })\n        dispatch({type: ALERT, payload: {loading: true}})\n        const res = await patchAPI(`category/${data._id}`, {name: data.name}, access_token)\n        \n        dispatch({type: ALERT, payload: {loading: false}})\n        \n    } catch (error: any) {\n        dispatch({type: ALERT, payload: {\n            errors: error.response?.data?.msg\n        }})\n    }\n}\n\nexport const deleteCategory = (id: string, token: string) => async(dispatch: Dispatch<ICategoryType | IAlertType>) => {\n    const result = await checkTokenExp(token, dispatch)\n    const access_token = result ? result : token\n    try {\n        dispatch({\n            type: DELETE_CATEGORY,\n            payload: id\n        })\n\n        const res = await deleteAPI(`category/${id}`, access_token)\n        \n    } catch (error: any) {\n        dispatch({type: ALERT, payload: {\n            errors: error.response?.data?.msg\n        }})\n    }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { IBlog } from '../../utils/TypeScript';\n\ninterface IProps {\n    blog: IBlog\n}\nconst CardVert: React.FC<IProps> = ({blog}) => {\n    return (\n        <div className=\"card\">\n      {\n        typeof(blog.thumbnail) === 'string' &&\n        <img src={blog.thumbnail} className=\"card-img-top\" alt=\"...\"\n        style={{height: '180px', objectFit: 'cover'}} />\n      }\n\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">\n          <Link to={`/blog/${blog._id}`}>\n            {blog.title.slice(0,50) + '...'}\n          </Link>\n        </h5>\n        <p className=\"card-text\">\n          { blog.description.slice(0,100) + '...' }\n        </p>\n\n        <p className=\"card-text d-flex justify-content-between\">\n          <small className=\"text-muted text-capitalize\">\n            {\n              typeof(blog.user) !== 'string' &&\n              <Link to={`/profile/${blog.user._id}`}>\n                By: {blog.user.name}\n              </Link>\n            }\n          </small>\n\n          <small className=\"text-muted\">\n            { new Date(blog.createdAt).toLocaleString() }\n          </small>\n        </p>\n      </div>\n    </div>\n    );\n};\n\nexport default CardVert;","import { IUser } from \"../../utils/TypeScript\";\n\nexport const GET_OTHER_INFO = \"GET_OTHER_INFO\"\n\nexport interface IGetOtherInfoType {\n    type: typeof GET_OTHER_INFO,\n    payload: IUser\n}","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Loading from '../components/alert/Loading';\nimport CardVert from '../components/cards/CardVert';\nimport { IHomeBlogs } from '../redux/types/blogType';\nimport { IBlog, RootStore } from '../utils/TypeScript';\n\nconst Home = () => {\n    const { homeBlogs } = useSelector((state: RootStore) => state) \n    \n    if(homeBlogs.length === 0) return <Loading />\n    return (\n        <div className=\"home_page\">\n      {\n        homeBlogs.map((homeBlog: IHomeBlogs) => (\n          <div key={homeBlog._id}>\n            {\n              homeBlog.count > 0 &&\n              <>\n                <h3>\n                  <Link to={ `/blogs/${(homeBlog.name).toLowerCase()}` }>\n                    { homeBlog.name } <small>({ homeBlog.count })</small>\n                  </Link>\n                </h3>\n                <hr className=\"mt-1\" />\n\n                <div className=\"home_blogs\">\n                  {\n                    homeBlog.blogs.map((blog: IBlog) => (\n                      <CardVert key={blog._id} blog={blog} />\n                    ))\n                  }\n                </div>\n              </>\n            }\n\n            {\n              homeBlog.count > 4 && \n              <Link className=\"text-end d-block mt-2 mb-3\"\n              to={`/blogs/${homeBlog.name}`}>\n                Read more &gt;&gt;\n              </Link>\n            }\n          </div>\n        ))\n      }\n    </div>\n    );\n};\n\nexport default Home;","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { showErrMsg, showSuccessMsg } from '../../components/alert/Alert';\nimport { postApi } from '../../utils/FetchData';\nimport { IParams } from '../../utils/TypeScript';\n\nconst Active = () => {\n    const {slug}: IParams = useParams()\n    const [success, setSuccess] = useState('')\n    const [error, setError] = useState('')\n    \n    useEffect(() => {\n        if(slug) {\n            postApi('active', { active_token: slug })\n            .then(res => setSuccess(res.data.msg))\n            .catch(err => {\n                console.log(err.message);\n                setError(err.message)\n            })\n        }\n    }, [slug])\n\n    return (\n        <div>\n            <div>{success && showSuccessMsg(success)}</div>\n            <div>{error && showErrMsg(error)}</div>\n        </div>\n    );\n};\n\nexport default Active;"],"sourceRoot":""}